// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 5 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\35507a3b-ce76-41d0-9077-3fc028bf3a63
// command took 3,06s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\35507a3b-ce76-41d0-9077-3fc028bf3a63
// command took 4,12s and exited with 0
// ***** Done, took 00:00:07 (7.64 sec)   *****
// Found 5 benchmarks:
//   BenchmarkExecutorFinal.cargarDiccionario: DefaultJob
//   BenchmarkExecutorFinal.cargarHashTable: DefaultJob
//   BenchmarkExecutorFinal.findItemDiccionario: DefaultJob
//   BenchmarkExecutorFinal.findItemHash: DefaultJob
//   BenchmarkExecutorFinal.findItemList: DefaultJob

// **************************
// Benchmark: BenchmarkExecutorFinal.cargarDiccionario: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "35507a3b-ce76-41d0-9077-3fc028bf3a63.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorFinal.cargarDiccionario" --job "Default" --benchmarkId 0 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\35507a3b-ce76-41d0-9077-3fc028bf3a63\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 276000.00 ns, 276.0000 us/op
WorkloadJitting  1: 1 op, 52624625600.00 ns, 52.6246 s/op


System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.ArgumentException: An item with the same key has already been added. Key: 1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at DALMentoring.Mentoring.Helpers.ListManager.cargarDiccionario() in D:\Proyectos\Mentoring\DALMentoring\Mentoring\Helpers\ListManager.cs:line 27
   at DALMentoring.Mentoring.BenchmarkExecutorFinal.cargarDiccionario() in D:\Proyectos\Mentoring\DALMentoring\Mentoring\BenchmarkExecutorFinal.cs:line 20
   at BenchmarkDotNet.Autogenerated.Runnable_0.WorkloadActionNoUnroll(Int64 invokeCount) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\35507a3b-ce76-41d0-9077-3fc028bf3a63\35507a3b-ce76-41d0-9077-3fc028bf3a63.notcs:line 839
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineStage.Run(IStoppingCriteria criteria, Int64 invokeCount, IterationMode mode, IterationStage stage, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineWarmupStage.Run(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor, RunStrategy runStrategy)
   at BenchmarkDotNet.Engines.EngineWarmupStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, RunStrategy runStrategy)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\35507a3b-ce76-41d0-9077-3fc028bf3a63\35507a3b-ce76-41d0-9077-3fc028bf3a63.notcs:line 171
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\35507a3b-ce76-41d0-9077-3fc028bf3a63\35507a3b-ce76-41d0-9077-3fc028bf3a63.notcs:line 53
// AfterAll
ExitCode != 0
// Benchmark Process 24336 has exited with code -1
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: BenchmarkExecutorFinal.cargarHashTable: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "35507a3b-ce76-41d0-9077-3fc028bf3a63.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorFinal.cargarHashTable" --job "Default" --benchmarkId 1 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\35507a3b-ce76-41d0-9077-3fc028bf3a63\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 267400.00 ns, 267.4000 us/op
WorkloadJitting  1: 1 op, 49695792000.00 ns, 49.6958 s/op


System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.ArgumentException: Item has already been added. Key in dictionary: '1'  Key being added: '1'
   at System.Collections.Hashtable.Insert(Object key, Object nvalue, Boolean add)
   at DALMentoring.Mentoring.Helpers.ListManager.cargarHashTable() in D:\Proyectos\Mentoring\DALMentoring\Mentoring\Helpers\ListManager.cs:line 35
   at DALMentoring.Mentoring.BenchmarkExecutorFinal.cargarHashTable() in D:\Proyectos\Mentoring\DALMentoring\Mentoring\BenchmarkExecutorFinal.cs:line 26
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionNoUnroll(Int64 invokeCount) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\35507a3b-ce76-41d0-9077-3fc028bf3a63\35507a3b-ce76-41d0-9077-3fc028bf3a63.notcs:line 1571
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineStage.Run(IStoppingCriteria criteria, Int64 invokeCount, IterationMode mode, IterationStage stage, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineWarmupStage.Run(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor, RunStrategy runStrategy)
   at BenchmarkDotNet.Engines.EngineWarmupStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, RunStrategy runStrategy)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\35507a3b-ce76-41d0-9077-3fc028bf3a63\35507a3b-ce76-41d0-9077-3fc028bf3a63.notcs:line 903
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\35507a3b-ce76-41d0-9077-3fc028bf3a63\35507a3b-ce76-41d0-9077-3fc028bf3a63.notcs:line 53
// AfterAll
ExitCode != 0
// Benchmark Process 9576 has exited with code -1
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: BenchmarkExecutorFinal.findItemDiccionario: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "35507a3b-ce76-41d0-9077-3fc028bf3a63.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorFinal.findItemDiccionario" --job "Default" --benchmarkId 2 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\35507a3b-ce76-41d0-9077-3fc028bf3a63\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 257500.00 ns, 257.5000 us/op
WorkloadJitting  1: 1 op, 48547098300.00 ns, 48.5471 s/op

WorkloadWarmup   1: 1 op, 36300.00 ns, 36.3000 us/op
WorkloadWarmup   2: 1 op, 14600.00 ns, 14.6000 us/op
WorkloadWarmup   3: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadWarmup   4: 1 op, 9200.00 ns, 9.2000 us/op
WorkloadWarmup   5: 1 op, 13100.00 ns, 13.1000 us/op
WorkloadWarmup   6: 1 op, 11200.00 ns, 11.2000 us/op
WorkloadWarmup   7: 1 op, 10900.00 ns, 10.9000 us/op
WorkloadWarmup   8: 1 op, 11600.00 ns, 11.6000 us/op
WorkloadWarmup   9: 1 op, 11000.00 ns, 11.0000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 12900.00 ns, 12.9000 us/op
WorkloadActual   2: 1 op, 10800.00 ns, 10.8000 us/op
WorkloadActual   3: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual   4: 1 op, 12700.00 ns, 12.7000 us/op
WorkloadActual   5: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadActual   6: 1 op, 13800.00 ns, 13.8000 us/op
WorkloadActual   7: 1 op, 10400.00 ns, 10.4000 us/op
WorkloadActual   8: 1 op, 12800.00 ns, 12.8000 us/op
WorkloadActual   9: 1 op, 10400.00 ns, 10.4000 us/op
WorkloadActual  10: 1 op, 9700.00 ns, 9.7000 us/op
WorkloadActual  11: 1 op, 12100.00 ns, 12.1000 us/op
WorkloadActual  12: 1 op, 10100.00 ns, 10.1000 us/op
WorkloadActual  13: 1 op, 10800.00 ns, 10.8000 us/op
WorkloadActual  14: 1 op, 13500.00 ns, 13.5000 us/op
WorkloadActual  15: 1 op, 11500.00 ns, 11.5000 us/op
WorkloadActual  16: 1 op, 9600.00 ns, 9.6000 us/op
WorkloadActual  17: 1 op, 9800.00 ns, 9.8000 us/op
WorkloadActual  18: 1 op, 12400.00 ns, 12.4000 us/op
WorkloadActual  19: 1 op, 13100.00 ns, 13.1000 us/op
WorkloadActual  20: 1 op, 11400.00 ns, 11.4000 us/op
WorkloadActual  21: 1 op, 14500.00 ns, 14.5000 us/op
WorkloadActual  22: 1 op, 16000.00 ns, 16.0000 us/op
WorkloadActual  23: 1 op, 16200.00 ns, 16.2000 us/op
WorkloadActual  24: 1 op, 28000.00 ns, 28.0000 us/op
WorkloadActual  25: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  26: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  27: 1 op, 1800.00 ns, 1.8000 us/op
WorkloadActual  28: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadActual  29: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  30: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadActual  31: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  32: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  33: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  34: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  35: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  36: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  37: 1 op, 3500.00 ns, 3.5000 us/op
WorkloadActual  38: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  39: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  40: 1 op, 4600.00 ns, 4.6000 us/op
WorkloadActual  41: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  42: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  43: 1 op, 3600.00 ns, 3.6000 us/op
WorkloadActual  44: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  45: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadActual  46: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadActual  47: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadActual  48: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  49: 1 op, 3500.00 ns, 3.5000 us/op
WorkloadActual  50: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  51: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadActual  52: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadActual  53: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadActual  54: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual  55: 1 op, 3500.00 ns, 3.5000 us/op
WorkloadActual  56: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  57: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  58: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadActual  59: 1 op, 3300.00 ns, 3.3000 us/op
WorkloadActual  60: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  61: 1 op, 3300.00 ns, 3.3000 us/op
WorkloadActual  62: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadActual  63: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadActual  64: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadActual  65: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  66: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  67: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  68: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  69: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  70: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadActual  71: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  72: 1 op, 4200.00 ns, 4.2000 us/op
WorkloadActual  73: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  74: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual  75: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  76: 1 op, 3700.00 ns, 3.7000 us/op
WorkloadActual  77: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadActual  78: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  79: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  80: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadActual  81: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  82: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  83: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  84: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  85: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual  86: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadActual  87: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  88: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  89: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  90: 1 op, 3600.00 ns, 3.6000 us/op
WorkloadActual  91: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual  92: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  93: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  94: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual  95: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  96: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  97: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  98: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  99: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  100: 1 op, 2300.00 ns, 2.3000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult   2: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadResult   3: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult   4: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult   5: 1 op, 1800.00 ns, 1.8000 us/op
WorkloadResult   6: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadResult   7: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult   8: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadResult   9: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  10: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  11: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  12: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  13: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  14: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  15: 1 op, 3500.00 ns, 3.5000 us/op
WorkloadResult  16: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  17: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  18: 1 op, 4600.00 ns, 4.6000 us/op
WorkloadResult  19: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  20: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  21: 1 op, 3600.00 ns, 3.6000 us/op
WorkloadResult  22: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  23: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadResult  24: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadResult  25: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadResult  26: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  27: 1 op, 3500.00 ns, 3.5000 us/op
WorkloadResult  28: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  29: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadResult  30: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadResult  31: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadResult  32: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult  33: 1 op, 3500.00 ns, 3.5000 us/op
WorkloadResult  34: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  35: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  36: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadResult  37: 1 op, 3300.00 ns, 3.3000 us/op
WorkloadResult  38: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  39: 1 op, 3300.00 ns, 3.3000 us/op
WorkloadResult  40: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadResult  41: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadResult  42: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadResult  43: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  44: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  45: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  46: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  47: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  48: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadResult  49: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  50: 1 op, 4200.00 ns, 4.2000 us/op
WorkloadResult  51: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  52: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult  53: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  54: 1 op, 3700.00 ns, 3.7000 us/op
WorkloadResult  55: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadResult  56: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  57: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  58: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadResult  59: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  60: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  61: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  62: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  63: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult  64: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadResult  65: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  66: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  67: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  68: 1 op, 3600.00 ns, 3.6000 us/op
WorkloadResult  69: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult  70: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  71: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  72: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult  73: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  74: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  75: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  76: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  77: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  78: 1 op, 2300.00 ns, 2.3000 us/op
GC:  0 0 0 0 1
Threading:  2 0 1

// AfterAll
// Benchmark Process 10556 has exited with code 0

Mean = 2.800 μs, StdErr = 0.057 μs (2.05%), N = 78, StdDev = 0.506 μs
Min = 1.800 μs, Q1 = 2.400 μs, Median = 2.800 μs, Q3 = 3.100 μs, Max = 4.600 μs
IQR = 0.700 μs, LowerFence = 1.350 μs, UpperFence = 4.150 μs
ConfidenceInterval = [2.604 μs; 2.996 μs] (CI 99.9%), Margin = 0.196 μs (7.01% of Mean)
Skewness = 0.69, Kurtosis = 4.07, MValue = 5.24

// **************************
// Benchmark: BenchmarkExecutorFinal.findItemHash: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "35507a3b-ce76-41d0-9077-3fc028bf3a63.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorFinal.findItemHash" --job "Default" --benchmarkId 3 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\35507a3b-ce76-41d0-9077-3fc028bf3a63\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 273300.00 ns, 273.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadJitting  1: 1 op, 48075560800.00 ns, 48.0756 s/op

System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   1: 1 op, 101000.00 ns, 101.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   2: 1 op, 95700.00 ns, 95.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   3: 1 op, 84300.00 ns, 84.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   4: 1 op, 80800.00 ns, 80.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   5: 1 op, 85000.00 ns, 85.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   6: 1 op, 103200.00 ns, 103.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   7: 1 op, 58100.00 ns, 58.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   8: 1 op, 92000.00 ns, 92.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   9: 1 op, 79500.00 ns, 79.5000 us/op

// BeforeActualRun
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   1: 1 op, 115100.00 ns, 115.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   2: 1 op, 89800.00 ns, 89.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   3: 1 op, 81700.00 ns, 81.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   4: 1 op, 98100.00 ns, 98.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   5: 1 op, 90100.00 ns, 90.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   6: 1 op, 70500.00 ns, 70.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   7: 1 op, 80400.00 ns, 80.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   8: 1 op, 81200.00 ns, 81.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   9: 1 op, 78200.00 ns, 78.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  10: 1 op, 85400.00 ns, 85.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  11: 1 op, 86100.00 ns, 86.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  12: 1 op, 87000.00 ns, 87.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  13: 1 op, 78800.00 ns, 78.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  14: 1 op, 91300.00 ns, 91.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  15: 1 op, 79900.00 ns, 79.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  16: 1 op, 87800.00 ns, 87.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  17: 1 op, 84700.00 ns, 84.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  18: 1 op, 81600.00 ns, 81.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  19: 1 op, 79500.00 ns, 79.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  20: 1 op, 89000.00 ns, 89.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  21: 1 op, 84900.00 ns, 84.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  22: 1 op, 76900.00 ns, 76.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  23: 1 op, 68500.00 ns, 68.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  24: 1 op, 56200.00 ns, 56.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  25: 1 op, 52400.00 ns, 52.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  26: 1 op, 52500.00 ns, 52.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  27: 1 op, 53300.00 ns, 53.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  28: 1 op, 54800.00 ns, 54.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  29: 1 op, 55500.00 ns, 55.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  30: 1 op, 52300.00 ns, 52.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  31: 1 op, 46800.00 ns, 46.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  32: 1 op, 65200.00 ns, 65.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  33: 1 op, 64100.00 ns, 64.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  34: 1 op, 54800.00 ns, 54.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  35: 1 op, 52100.00 ns, 52.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  36: 1 op, 56000.00 ns, 56.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  37: 1 op, 61300.00 ns, 61.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  38: 1 op, 52800.00 ns, 52.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  39: 1 op, 59400.00 ns, 59.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  40: 1 op, 53100.00 ns, 53.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  41: 1 op, 53700.00 ns, 53.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  42: 1 op, 50100.00 ns, 50.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  43: 1 op, 46600.00 ns, 46.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  44: 1 op, 48600.00 ns, 48.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  45: 1 op, 59700.00 ns, 59.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  46: 1 op, 48700.00 ns, 48.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  47: 1 op, 50300.00 ns, 50.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  48: 1 op, 53000.00 ns, 53.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  49: 1 op, 56000.00 ns, 56.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  50: 1 op, 53900.00 ns, 53.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  51: 1 op, 48300.00 ns, 48.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  52: 1 op, 56500.00 ns, 56.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  53: 1 op, 51000.00 ns, 51.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  54: 1 op, 54000.00 ns, 54.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  55: 1 op, 51100.00 ns, 51.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  56: 1 op, 51000.00 ns, 51.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  57: 1 op, 54900.00 ns, 54.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  58: 1 op, 57800.00 ns, 57.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  59: 1 op, 50300.00 ns, 50.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  60: 1 op, 58500.00 ns, 58.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  61: 1 op, 45700.00 ns, 45.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  62: 1 op, 51000.00 ns, 51.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  63: 1 op, 55400.00 ns, 55.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  64: 1 op, 58100.00 ns, 58.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  65: 1 op, 58300.00 ns, 58.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  66: 1 op, 59000.00 ns, 59.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  67: 1 op, 59000.00 ns, 59.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  68: 1 op, 57800.00 ns, 57.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  69: 1 op, 51800.00 ns, 51.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  70: 1 op, 56000.00 ns, 56.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  71: 1 op, 54300.00 ns, 54.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  72: 1 op, 54000.00 ns, 54.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  73: 1 op, 44400.00 ns, 44.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  74: 1 op, 51900.00 ns, 51.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  75: 1 op, 58800.00 ns, 58.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  76: 1 op, 49500.00 ns, 49.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  77: 1 op, 50700.00 ns, 50.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  78: 1 op, 54000.00 ns, 54.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  79: 1 op, 53700.00 ns, 53.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  80: 1 op, 47900.00 ns, 47.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  81: 1 op, 56900.00 ns, 56.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  82: 1 op, 51700.00 ns, 51.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  83: 1 op, 50100.00 ns, 50.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  84: 1 op, 63900.00 ns, 63.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  85: 1 op, 61700.00 ns, 61.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  86: 1 op, 47800.00 ns, 47.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  87: 1 op, 49200.00 ns, 49.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  88: 1 op, 56100.00 ns, 56.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  89: 1 op, 52200.00 ns, 52.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  90: 1 op, 58600.00 ns, 58.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  91: 1 op, 60400.00 ns, 60.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  92: 1 op, 54800.00 ns, 54.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  93: 1 op, 57900.00 ns, 57.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  94: 1 op, 51800.00 ns, 51.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  95: 1 op, 49700.00 ns, 49.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  96: 1 op, 57600.00 ns, 57.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  97: 1 op, 50800.00 ns, 50.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  98: 1 op, 50200.00 ns, 50.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  99: 1 op, 51000.00 ns, 51.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  100: 1 op, 62100.00 ns, 62.1000 us/op

// AfterActualRun
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadResult   1: 1 op, 81700.00 ns, 81.7000 us/op
WorkloadResult   2: 1 op, 70500.00 ns, 70.5000 us/op
WorkloadResult   3: 1 op, 80400.00 ns, 80.4000 us/op
WorkloadResult   4: 1 op, 81200.00 ns, 81.2000 us/op
WorkloadResult   5: 1 op, 78200.00 ns, 78.2000 us/op
WorkloadResult   6: 1 op, 78800.00 ns, 78.8000 us/op
WorkloadResult   7: 1 op, 79900.00 ns, 79.9000 us/op
WorkloadResult   8: 1 op, 81600.00 ns, 81.6000 us/op
WorkloadResult   9: 1 op, 79500.00 ns, 79.5000 us/op
WorkloadResult  10: 1 op, 76900.00 ns, 76.9000 us/op
WorkloadResult  11: 1 op, 68500.00 ns, 68.5000 us/op
WorkloadResult  12: 1 op, 56200.00 ns, 56.2000 us/op
WorkloadResult  13: 1 op, 52400.00 ns, 52.4000 us/op
WorkloadResult  14: 1 op, 52500.00 ns, 52.5000 us/op
WorkloadResult  15: 1 op, 53300.00 ns, 53.3000 us/op
WorkloadResult  16: 1 op, 54800.00 ns, 54.8000 us/op
WorkloadResult  17: 1 op, 55500.00 ns, 55.5000 us/op
WorkloadResult  18: 1 op, 52300.00 ns, 52.3000 us/op
WorkloadResult  19: 1 op, 46800.00 ns, 46.8000 us/op
WorkloadResult  20: 1 op, 65200.00 ns, 65.2000 us/op
WorkloadResult  21: 1 op, 64100.00 ns, 64.1000 us/op
WorkloadResult  22: 1 op, 54800.00 ns, 54.8000 us/op
WorkloadResult  23: 1 op, 52100.00 ns, 52.1000 us/op
WorkloadResult  24: 1 op, 56000.00 ns, 56.0000 us/op
WorkloadResult  25: 1 op, 61300.00 ns, 61.3000 us/op
WorkloadResult  26: 1 op, 52800.00 ns, 52.8000 us/op
WorkloadResult  27: 1 op, 59400.00 ns, 59.4000 us/op
WorkloadResult  28: 1 op, 53100.00 ns, 53.1000 us/op
WorkloadResult  29: 1 op, 53700.00 ns, 53.7000 us/op
WorkloadResult  30: 1 op, 50100.00 ns, 50.1000 us/op
WorkloadResult  31: 1 op, 46600.00 ns, 46.6000 us/op
WorkloadResult  32: 1 op, 48600.00 ns, 48.6000 us/op
WorkloadResult  33: 1 op, 59700.00 ns, 59.7000 us/op
WorkloadResult  34: 1 op, 48700.00 ns, 48.7000 us/op
WorkloadResult  35: 1 op, 50300.00 ns, 50.3000 us/op
WorkloadResult  36: 1 op, 53000.00 ns, 53.0000 us/op
WorkloadResult  37: 1 op, 56000.00 ns, 56.0000 us/op
WorkloadResult  38: 1 op, 53900.00 ns, 53.9000 us/op
WorkloadResult  39: 1 op, 48300.00 ns, 48.3000 us/op
WorkloadResult  40: 1 op, 56500.00 ns, 56.5000 us/op
WorkloadResult  41: 1 op, 51000.00 ns, 51.0000 us/op
WorkloadResult  42: 1 op, 54000.00 ns, 54.0000 us/op
WorkloadResult  43: 1 op, 51100.00 ns, 51.1000 us/op
WorkloadResult  44: 1 op, 51000.00 ns, 51.0000 us/op
WorkloadResult  45: 1 op, 54900.00 ns, 54.9000 us/op
WorkloadResult  46: 1 op, 57800.00 ns, 57.8000 us/op
WorkloadResult  47: 1 op, 50300.00 ns, 50.3000 us/op
WorkloadResult  48: 1 op, 58500.00 ns, 58.5000 us/op
WorkloadResult  49: 1 op, 45700.00 ns, 45.7000 us/op
WorkloadResult  50: 1 op, 51000.00 ns, 51.0000 us/op
WorkloadResult  51: 1 op, 55400.00 ns, 55.4000 us/op
WorkloadResult  52: 1 op, 58100.00 ns, 58.1000 us/op
WorkloadResult  53: 1 op, 58300.00 ns, 58.3000 us/op
WorkloadResult  54: 1 op, 59000.00 ns, 59.0000 us/op
WorkloadResult  55: 1 op, 59000.00 ns, 59.0000 us/op
WorkloadResult  56: 1 op, 57800.00 ns, 57.8000 us/op
WorkloadResult  57: 1 op, 51800.00 ns, 51.8000 us/op
WorkloadResult  58: 1 op, 56000.00 ns, 56.0000 us/op
WorkloadResult  59: 1 op, 54300.00 ns, 54.3000 us/op
WorkloadResult  60: 1 op, 54000.00 ns, 54.0000 us/op
WorkloadResult  61: 1 op, 44400.00 ns, 44.4000 us/op
WorkloadResult  62: 1 op, 51900.00 ns, 51.9000 us/op
WorkloadResult  63: 1 op, 58800.00 ns, 58.8000 us/op
WorkloadResult  64: 1 op, 49500.00 ns, 49.5000 us/op
WorkloadResult  65: 1 op, 50700.00 ns, 50.7000 us/op
WorkloadResult  66: 1 op, 54000.00 ns, 54.0000 us/op
WorkloadResult  67: 1 op, 53700.00 ns, 53.7000 us/op
WorkloadResult  68: 1 op, 47900.00 ns, 47.9000 us/op
WorkloadResult  69: 1 op, 56900.00 ns, 56.9000 us/op
WorkloadResult  70: 1 op, 51700.00 ns, 51.7000 us/op
WorkloadResult  71: 1 op, 50100.00 ns, 50.1000 us/op
WorkloadResult  72: 1 op, 63900.00 ns, 63.9000 us/op
WorkloadResult  73: 1 op, 61700.00 ns, 61.7000 us/op
WorkloadResult  74: 1 op, 47800.00 ns, 47.8000 us/op
WorkloadResult  75: 1 op, 49200.00 ns, 49.2000 us/op
WorkloadResult  76: 1 op, 56100.00 ns, 56.1000 us/op
WorkloadResult  77: 1 op, 52200.00 ns, 52.2000 us/op
WorkloadResult  78: 1 op, 58600.00 ns, 58.6000 us/op
WorkloadResult  79: 1 op, 60400.00 ns, 60.4000 us/op
WorkloadResult  80: 1 op, 54800.00 ns, 54.8000 us/op
WorkloadResult  81: 1 op, 57900.00 ns, 57.9000 us/op
WorkloadResult  82: 1 op, 51800.00 ns, 51.8000 us/op
WorkloadResult  83: 1 op, 49700.00 ns, 49.7000 us/op
WorkloadResult  84: 1 op, 57600.00 ns, 57.6000 us/op
WorkloadResult  85: 1 op, 50800.00 ns, 50.8000 us/op
WorkloadResult  86: 1 op, 50200.00 ns, 50.2000 us/op
WorkloadResult  87: 1 op, 51000.00 ns, 51.0000 us/op
WorkloadResult  88: 1 op, 62100.00 ns, 62.1000 us/op
GC:  0 0 0 416 1
Threading:  4 0 1

// AfterAll
// Benchmark Process 25804 has exited with code 0

Mean = 57.041 μs, StdErr = 0.970 μs (1.70%), N = 88, StdDev = 9.102 μs
Min = 44.400 μs, Q1 = 51.000 μs, Median = 54.550 μs, Q3 = 58.850 μs, Max = 81.700 μs
IQR = 7.850 μs, LowerFence = 39.225 μs, UpperFence = 70.625 μs
ConfidenceInterval = [53.736 μs; 60.345 μs] (CI 99.9%), Margin = 3.305 μs (5.79% of Mean)
Skewness = 1.48, Kurtosis = 4.43, MValue = 2.4

// **************************
// Benchmark: BenchmarkExecutorFinal.findItemList: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "35507a3b-ce76-41d0-9077-3fc028bf3a63.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorFinal.findItemList" --job "Default" --benchmarkId 4 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\35507a3b-ce76-41d0-9077-3fc028bf3a63\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 272500.00 ns, 272.5000 us/op
Name9999999
WorkloadJitting  1: 1 op, 48102693100.00 ns, 48.1027 s/op

Name9999999
WorkloadWarmup   1: 1 op, 45032400.00 ns, 45.0324 ms/op
Name9999999
WorkloadWarmup   2: 1 op, 44386500.00 ns, 44.3865 ms/op
Name9999999
WorkloadWarmup   3: 1 op, 34880300.00 ns, 34.8803 ms/op
Name9999999
WorkloadWarmup   4: 1 op, 34739500.00 ns, 34.7395 ms/op
Name9999999
WorkloadWarmup   5: 1 op, 34494500.00 ns, 34.4945 ms/op
Name9999999
WorkloadWarmup   6: 1 op, 34783200.00 ns, 34.7832 ms/op
Name9999999
WorkloadWarmup   7: 1 op, 37028800.00 ns, 37.0288 ms/op
Name9999999
WorkloadWarmup   8: 1 op, 34581300.00 ns, 34.5813 ms/op
Name9999999
WorkloadWarmup   9: 1 op, 34619000.00 ns, 34.6190 ms/op
Name9999999
WorkloadWarmup  10: 1 op, 36686600.00 ns, 36.6866 ms/op
Name9999999
WorkloadWarmup  11: 1 op, 35072500.00 ns, 35.0725 ms/op

// BeforeActualRun
Name9999999
WorkloadActual   1: 1 op, 34569200.00 ns, 34.5692 ms/op
Name9999999
WorkloadActual   2: 1 op, 36583900.00 ns, 36.5839 ms/op
Name9999999
WorkloadActual   3: 1 op, 36382200.00 ns, 36.3822 ms/op
Name9999999
WorkloadActual   4: 1 op, 34680200.00 ns, 34.6802 ms/op
Name9999999
WorkloadActual   5: 1 op, 34983500.00 ns, 34.9835 ms/op
Name9999999
WorkloadActual   6: 1 op, 35232300.00 ns, 35.2323 ms/op
Name9999999
WorkloadActual   7: 1 op, 35525900.00 ns, 35.5259 ms/op
Name9999999
WorkloadActual   8: 1 op, 34802200.00 ns, 34.8022 ms/op
Name9999999
WorkloadActual   9: 1 op, 35003600.00 ns, 35.0036 ms/op
Name9999999
WorkloadActual  10: 1 op, 35911200.00 ns, 35.9112 ms/op
Name9999999
WorkloadActual  11: 1 op, 36550600.00 ns, 36.5506 ms/op
Name9999999
WorkloadActual  12: 1 op, 35584900.00 ns, 35.5849 ms/op
Name9999999
WorkloadActual  13: 1 op, 34789500.00 ns, 34.7895 ms/op
Name9999999
WorkloadActual  14: 1 op, 34713200.00 ns, 34.7132 ms/op
Name9999999
WorkloadActual  15: 1 op, 35006700.00 ns, 35.0067 ms/op
Name9999999
WorkloadActual  16: 1 op, 52149100.00 ns, 52.1491 ms/op
Name9999999
WorkloadActual  17: 1 op, 34805600.00 ns, 34.8056 ms/op

// AfterActualRun
Name9999999
WorkloadResult   1: 1 op, 34569200.00 ns, 34.5692 ms/op
WorkloadResult   2: 1 op, 36583900.00 ns, 36.5839 ms/op
WorkloadResult   3: 1 op, 36382200.00 ns, 36.3822 ms/op
WorkloadResult   4: 1 op, 34680200.00 ns, 34.6802 ms/op
WorkloadResult   5: 1 op, 34983500.00 ns, 34.9835 ms/op
WorkloadResult   6: 1 op, 35232300.00 ns, 35.2323 ms/op
WorkloadResult   7: 1 op, 35525900.00 ns, 35.5259 ms/op
WorkloadResult   8: 1 op, 34802200.00 ns, 34.8022 ms/op
WorkloadResult   9: 1 op, 35003600.00 ns, 35.0036 ms/op
WorkloadResult  10: 1 op, 35911200.00 ns, 35.9112 ms/op
WorkloadResult  11: 1 op, 36550600.00 ns, 36.5506 ms/op
WorkloadResult  12: 1 op, 35584900.00 ns, 35.5849 ms/op
WorkloadResult  13: 1 op, 34789500.00 ns, 34.7895 ms/op
WorkloadResult  14: 1 op, 34713200.00 ns, 34.7132 ms/op
WorkloadResult  15: 1 op, 35006700.00 ns, 35.0067 ms/op
WorkloadResult  16: 1 op, 34805600.00 ns, 34.8056 ms/op
GC:  0 0 0 0 1
Threading:  2 0 1

// AfterAll
// Benchmark Process 2904 has exited with code 0

Mean = 35.320 ms, StdErr = 0.173 ms (0.49%), N = 16, StdDev = 0.692 ms
Min = 34.569 ms, Q1 = 34.799 ms, Median = 35.005 ms, Q3 = 35.666 ms, Max = 36.584 ms
IQR = 0.867 ms, LowerFence = 33.498 ms, UpperFence = 36.968 ms
ConfidenceInterval = [34.616 ms; 36.025 ms] (CI 99.9%), Margin = 0.704 ms (1.99% of Mean)
Skewness = 0.73, Kurtosis = 1.94, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\DALMentoring.Mentoring.BenchmarkExecutorFinal-report.csv
  BenchmarkDotNet.Artifacts\results\DALMentoring.Mentoring.BenchmarkExecutorFinal-report-github.md
  BenchmarkDotNet.Artifacts\results\DALMentoring.Mentoring.BenchmarkExecutorFinal-report.html

// * Detailed results *
BenchmarkExecutorFinal.cargarDiccionario: DefaultJob
Runtime = ; GC = 
There are not any results runs

BenchmarkExecutorFinal.cargarHashTable: DefaultJob
Runtime = ; GC = 
There are not any results runs

BenchmarkExecutorFinal.findItemDiccionario: DefaultJob
Runtime = .NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT; GC = Concurrent Workstation
Mean = 2.800 μs, StdErr = 0.057 μs (2.05%), N = 78, StdDev = 0.506 μs
Min = 1.800 μs, Q1 = 2.400 μs, Median = 2.800 μs, Q3 = 3.100 μs, Max = 4.600 μs
IQR = 0.700 μs, LowerFence = 1.350 μs, UpperFence = 4.150 μs
ConfidenceInterval = [2.604 μs; 2.996 μs] (CI 99.9%), Margin = 0.196 μs (7.01% of Mean)
Skewness = 0.69, Kurtosis = 4.07, MValue = 5.24
-------------------- Histogram --------------------
[1.744 μs ; 2.056 μs) | @@@@@
[2.056 μs ; 2.194 μs) | 
[2.194 μs ; 2.506 μs) | @@@@@@@@@@@@@@@@@@@
[2.506 μs ; 2.694 μs) | @@@@@@
[2.694 μs ; 3.006 μs) | @@@@@@@@@@@@@@@@@@@@@@@@@@
[3.006 μs ; 3.406 μs) | @@@@@@@@@@@@@@
[3.406 μs ; 3.756 μs) | @@@@@@
[3.756 μs ; 4.044 μs) | 
[4.044 μs ; 4.444 μs) | @
[4.444 μs ; 4.756 μs) | @
---------------------------------------------------

BenchmarkExecutorFinal.findItemHash: DefaultJob
Runtime = .NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT; GC = Concurrent Workstation
Mean = 57.041 μs, StdErr = 0.970 μs (1.70%), N = 88, StdDev = 9.102 μs
Min = 44.400 μs, Q1 = 51.000 μs, Median = 54.550 μs, Q3 = 58.850 μs, Max = 81.700 μs
IQR = 7.850 μs, LowerFence = 39.225 μs, UpperFence = 70.625 μs
ConfidenceInterval = [53.736 μs; 60.345 μs] (CI 99.9%), Margin = 3.305 μs (5.79% of Mean)
Skewness = 1.48, Kurtosis = 4.43, MValue = 2.4
-------------------- Histogram --------------------
[44.264 μs ; 49.614 μs) | @@@@@@@@@@@
[49.614 μs ; 54.986 μs) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[54.986 μs ; 60.586 μs) | @@@@@@@@@@@@@@@@@@@@@@@
[60.586 μs ; 66.814 μs) | @@@@@@
[66.814 μs ; 72.186 μs) | @@
[72.186 μs ; 76.614 μs) | 
[76.614 μs ; 81.986 μs) | @@@@@@@@@
---------------------------------------------------

BenchmarkExecutorFinal.findItemList: DefaultJob
Runtime = .NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT; GC = Concurrent Workstation
Mean = 35.320 ms, StdErr = 0.173 ms (0.49%), N = 16, StdDev = 0.692 ms
Min = 34.569 ms, Q1 = 34.799 ms, Median = 35.005 ms, Q3 = 35.666 ms, Max = 36.584 ms
IQR = 0.867 ms, LowerFence = 33.498 ms, UpperFence = 36.968 ms
ConfidenceInterval = [34.616 ms; 36.025 ms] (CI 99.9%), Margin = 0.704 ms (1.99% of Mean)
Skewness = 0.73, Kurtosis = 1.94, MValue = 2
-------------------- Histogram --------------------
[34.540 ms ; 36.610 ms) | @@@@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.12.1, OS=Windows 10.0.18363.1316 (1909/November2018Update/19H2)
AMD Ryzen 5 2600, 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=5.0.101
  [Host]     : .NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT  [AttachedDebugger]
  DefaultJob : .NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT


|              Method |          Mean |       Error |      StdDev | Rank | Gen 0 | Gen 1 | Gen 2 | Allocated |
|-------------------- |--------------:|------------:|------------:|-----:|------:|------:|------:|----------:|
|   cargarDiccionario |            NA |          NA |          NA |    ? |     - |     - |     - |         - |
|     cargarHashTable |            NA |          NA |          NA |    ? |     - |     - |     - |         - |
| findItemDiccionario |      2.800 μs |   0.1961 μs |   0.5063 μs |    1 |     - |     - |     - |         - |
|        findItemHash |     57.041 μs |   3.3046 μs |   9.1017 μs |    2 |     - |     - |     - |     416 B |
|        findItemList | 35,320.294 μs | 704.2845 μs | 691.7016 μs |    3 |     - |     - |     - |         - |

Benchmarks with issues:
  BenchmarkExecutorFinal.cargarDiccionario: DefaultJob
  BenchmarkExecutorFinal.cargarHashTable: DefaultJob

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger
MinIterationTime
  BenchmarkExecutorFinal.findItemDiccionario: Default -> The minimum observed iteration time is 1.8000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  BenchmarkExecutorFinal.findItemHash: Default        -> The minimum observed iteration time is 44.4000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  BenchmarkExecutorFinal.findItemList: Default        -> The minimum observed iteration time is 34.5692 ms which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
MultimodalDistribution
  BenchmarkExecutorFinal.findItemDiccionario: Default -> It seems that the distribution is multimodal (mValue = 5.24)

// * Hints *
Outliers
  BenchmarkExecutorFinal.findItemDiccionario: Default -> 22 outliers were removed (9.60 μs..28.00 μs)
  BenchmarkExecutorFinal.findItemHash: Default        -> 12 outliers were removed (84.70 μs..115.10 μs)
  BenchmarkExecutorFinal.findItemList: Default        -> 1 outlier  was  removed (52.15 ms)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Rank      : Relative position of current benchmark mean among all benchmarks (Arabic style)
  Gen 0     : GC Generation 0 collects per 1000 operations
  Gen 1     : GC Generation 1 collects per 1000 operations
  Gen 2     : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 μs      : 1 Microsecond (0.000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:19:42 (1182.86 sec), executed benchmarks: 5

Global total time: 00:19:50 (1190.51 sec), executed benchmarks: 5
// * Artifacts cleanup *
