// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 6 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f
// command took 1,97s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f
// command took 3,68s and exited with 0
// ***** Done, took 00:00:05 (5.78 sec)   *****
// Found 6 benchmarks:
//   BenchmarkExecutorGenerics.cargarLista: DefaultJob
//   BenchmarkExecutorGenerics.cargarDiccionario: DefaultJob
//   BenchmarkExecutorGenerics.cargarHashTable: DefaultJob
//   BenchmarkExecutorGenerics.findItemDiccionario: DefaultJob
//   BenchmarkExecutorGenerics.findItemHash: DefaultJob
//   BenchmarkExecutorGenerics.findItemList: DefaultJob

// **************************
// Benchmark: BenchmarkExecutorGenerics.cargarLista: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "078c7a70-4cae-4a74-a78d-1aeee91aeb0f.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorGenerics.cargarLista" --job "Default" --benchmarkId 0 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.11 (CoreCLR 4.700.20.56602, CoreFX 4.700.20.56604), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 277900.00 ns, 277.9000 us/op
WorkloadJitting  1: 1 op, 33658696300.00 ns, 33.6587 s/op

WorkloadWarmup   1: 1 op, 126168600.00 ns, 126.1686 ms/op
WorkloadWarmup   2: 1 op, 64674700.00 ns, 64.6747 ms/op
WorkloadWarmup   3: 1 op, 187279700.00 ns, 187.2797 ms/op
WorkloadWarmup   4: 1 op, 64809400.00 ns, 64.8094 ms/op
WorkloadWarmup   5: 1 op, 64254800.00 ns, 64.2548 ms/op
WorkloadWarmup   6: 1 op, 290509600.00 ns, 290.5096 ms/op
WorkloadWarmup   7: 1 op, 64768800.00 ns, 64.7688 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 65131200.00 ns, 65.1312 ms/op
WorkloadActual   2: 1 op, 65076200.00 ns, 65.0762 ms/op
WorkloadActual   3: 1 op, 66521400.00 ns, 66.5214 ms/op
WorkloadActual   4: 1 op, 64674400.00 ns, 64.6744 ms/op
WorkloadActual   5: 1 op, 65880700.00 ns, 65.8807 ms/op
WorkloadActual   6: 1 op, 517649800.00 ns, 517.6498 ms/op
WorkloadActual   7: 1 op, 64000000.00 ns, 64.0000 ms/op
WorkloadActual   8: 1 op, 65154500.00 ns, 65.1545 ms/op
WorkloadActual   9: 1 op, 64355900.00 ns, 64.3559 ms/op
WorkloadActual  10: 1 op, 65765000.00 ns, 65.7650 ms/op
WorkloadActual  11: 1 op, 68641300.00 ns, 68.6413 ms/op
WorkloadActual  12: 1 op, 64513300.00 ns, 64.5133 ms/op
WorkloadActual  13: 1 op, 64615200.00 ns, 64.6152 ms/op
WorkloadActual  14: 1 op, 65453000.00 ns, 65.4530 ms/op
WorkloadActual  15: 1 op, 64791500.00 ns, 64.7915 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 65131200.00 ns, 65.1312 ms/op
WorkloadResult   2: 1 op, 65076200.00 ns, 65.0762 ms/op
WorkloadResult   3: 1 op, 66521400.00 ns, 66.5214 ms/op
WorkloadResult   4: 1 op, 64674400.00 ns, 64.6744 ms/op
WorkloadResult   5: 1 op, 65880700.00 ns, 65.8807 ms/op
WorkloadResult   6: 1 op, 64000000.00 ns, 64.0000 ms/op
WorkloadResult   7: 1 op, 65154500.00 ns, 65.1545 ms/op
WorkloadResult   8: 1 op, 64355900.00 ns, 64.3559 ms/op
WorkloadResult   9: 1 op, 65765000.00 ns, 65.7650 ms/op
WorkloadResult  10: 1 op, 64513300.00 ns, 64.5133 ms/op
WorkloadResult  11: 1 op, 64615200.00 ns, 64.6152 ms/op
WorkloadResult  12: 1 op, 65453000.00 ns, 65.4530 ms/op
WorkloadResult  13: 1 op, 64791500.00 ns, 64.7915 ms/op
GC:  0 0 0 0 1
Threading:  2 0 1

// AfterAll
// Benchmark Process 19156 has exited with code 0

Mean = 65.072 ms, StdErr = 0.193 ms (0.30%), N = 13, StdDev = 0.696 ms
Min = 64.000 ms, Q1 = 64.615 ms, Median = 65.076 ms, Q3 = 65.453 ms, Max = 66.521 ms
IQR = 0.838 ms, LowerFence = 63.358 ms, UpperFence = 66.710 ms
ConfidenceInterval = [64.238 ms; 65.905 ms] (CI 99.9%), Margin = 0.833 ms (1.28% of Mean)
Skewness = 0.46, Kurtosis = 2.25, MValue = 2

// **************************
// Benchmark: BenchmarkExecutorGenerics.cargarDiccionario: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "078c7a70-4cae-4a74-a78d-1aeee91aeb0f.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorGenerics.cargarDiccionario" --job "Default" --benchmarkId 1 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.11 (CoreCLR 4.700.20.56602, CoreFX 4.700.20.56604), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 279400.00 ns, 279.4000 us/op
WorkloadJitting  1: 1 op, 33006383500.00 ns, 33.0064 s/op


System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.ArgumentException: An item with the same key has already been added. Key: 1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at DALMentoring.Mentoring.Helpers.ListManager.cargarDiccionario() in D:\Proyectos\Mentoring\DALMentoring\Mentoring\Helpers\ListManager.cs:line 38
   at DALMentoring.Mentoring.BenchmarkExecutorGenerics.cargarDiccionario() in D:\Proyectos\Mentoring\DALMentoring\Executors\BenchmarkExecutorGenerics.cs:line 26
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionNoUnroll(Int64 invokeCount) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f\078c7a70-4cae-4a74-a78d-1aeee91aeb0f.notcs:line 1572
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineStage.Run(IStoppingCriteria criteria, Int64 invokeCount, IterationMode mode, IterationStage stage, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineWarmupStage.Run(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor, RunStrategy runStrategy)
   at BenchmarkDotNet.Engines.EngineWarmupStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, RunStrategy runStrategy)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f\078c7a70-4cae-4a74-a78d-1aeee91aeb0f.notcs:line 904
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f\078c7a70-4cae-4a74-a78d-1aeee91aeb0f.notcs:line 54
// AfterAll
ExitCode != 0
// Benchmark Process 25316 has exited with code -1
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: BenchmarkExecutorGenerics.cargarHashTable: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "078c7a70-4cae-4a74-a78d-1aeee91aeb0f.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorGenerics.cargarHashTable" --job "Default" --benchmarkId 2 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.11 (CoreCLR 4.700.20.56602, CoreFX 4.700.20.56604), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 270600.00 ns, 270.6000 us/op
WorkloadJitting  1: 1 op, 34235384100.00 ns, 34.2354 s/op


System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.ArgumentException: Item has already been added. Key in dictionary: '1'  Key being added: '1'
   at System.Collections.Hashtable.Insert(Object key, Object nvalue, Boolean add)
   at DALMentoring.Mentoring.Helpers.ListManager.cargarHashTable() in D:\Proyectos\Mentoring\DALMentoring\Mentoring\Helpers\ListManager.cs:line 47
   at DALMentoring.Mentoring.BenchmarkExecutorGenerics.cargarHashTable() in D:\Proyectos\Mentoring\DALMentoring\Executors\BenchmarkExecutorGenerics.cs:line 32
   at BenchmarkDotNet.Autogenerated.Runnable_2.WorkloadActionNoUnroll(Int64 invokeCount) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f\078c7a70-4cae-4a74-a78d-1aeee91aeb0f.notcs:line 2304
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineStage.Run(IStoppingCriteria criteria, Int64 invokeCount, IterationMode mode, IterationStage stage, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineWarmupStage.Run(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor, RunStrategy runStrategy)
   at BenchmarkDotNet.Engines.EngineWarmupStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, RunStrategy runStrategy)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_2.Run(IHost host, String benchmarkName) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f\078c7a70-4cae-4a74-a78d-1aeee91aeb0f.notcs:line 1636
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f\078c7a70-4cae-4a74-a78d-1aeee91aeb0f.notcs:line 54
// AfterAll
ExitCode != 0
// Benchmark Process 14480 has exited with code -1
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: BenchmarkExecutorGenerics.findItemDiccionario: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "078c7a70-4cae-4a74-a78d-1aeee91aeb0f.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorGenerics.findItemDiccionario" --job "Default" --benchmarkId 3 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.11 (CoreCLR 4.700.20.56602, CoreFX 4.700.20.56604), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 269400.00 ns, 269.4000 us/op
WorkloadJitting  1: 1 op, 33392711500.00 ns, 33.3927 s/op

WorkloadWarmup   1: 1 op, 36500.00 ns, 36.5000 us/op
WorkloadWarmup   2: 1 op, 11700.00 ns, 11.7000 us/op
WorkloadWarmup   3: 1 op, 5200.00 ns, 5.2000 us/op
WorkloadWarmup   4: 1 op, 8800.00 ns, 8.8000 us/op
WorkloadWarmup   5: 1 op, 10600.00 ns, 10.6000 us/op
WorkloadWarmup   6: 1 op, 12200.00 ns, 12.2000 us/op
WorkloadWarmup   7: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadWarmup   8: 1 op, 10700.00 ns, 10.7000 us/op
WorkloadWarmup   9: 1 op, 9500.00 ns, 9.5000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 11500.00 ns, 11.5000 us/op
WorkloadActual   2: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadActual   3: 1 op, 10800.00 ns, 10.8000 us/op
WorkloadActual   4: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadActual   5: 1 op, 10000.00 ns, 10.0000 us/op
WorkloadActual   6: 1 op, 9000.00 ns, 9.0000 us/op
WorkloadActual   7: 1 op, 9900.00 ns, 9.9000 us/op
WorkloadActual   8: 1 op, 9200.00 ns, 9.2000 us/op
WorkloadActual   9: 1 op, 9300.00 ns, 9.3000 us/op
WorkloadActual  10: 1 op, 10600.00 ns, 10.6000 us/op
WorkloadActual  11: 1 op, 15000.00 ns, 15.0000 us/op
WorkloadActual  12: 1 op, 19800.00 ns, 19.8000 us/op
WorkloadActual  13: 1 op, 10000.00 ns, 10.0000 us/op
WorkloadActual  14: 1 op, 10400.00 ns, 10.4000 us/op
WorkloadActual  15: 1 op, 11100.00 ns, 11.1000 us/op
WorkloadActual  16: 1 op, 14000.00 ns, 14.0000 us/op
WorkloadActual  17: 1 op, 9700.00 ns, 9.7000 us/op
WorkloadActual  18: 1 op, 9300.00 ns, 9.3000 us/op
WorkloadActual  19: 1 op, 11400.00 ns, 11.4000 us/op
WorkloadActual  20: 1 op, 10500.00 ns, 10.5000 us/op
WorkloadActual  21: 1 op, 10300.00 ns, 10.3000 us/op
WorkloadActual  22: 1 op, 14300.00 ns, 14.3000 us/op
WorkloadActual  23: 1 op, 9600.00 ns, 9.6000 us/op
WorkloadActual  24: 1 op, 12000.00 ns, 12.0000 us/op
WorkloadActual  25: 1 op, 31300.00 ns, 31.3000 us/op
WorkloadActual  26: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadActual  27: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  28: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadActual  29: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  30: 1 op, 3600.00 ns, 3.6000 us/op
WorkloadActual  31: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  32: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  33: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  34: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadActual  35: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  36: 1 op, 3300.00 ns, 3.3000 us/op
WorkloadActual  37: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  38: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadActual  39: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadActual  40: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  41: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  42: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  43: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  44: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadActual  45: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  46: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadActual  47: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  48: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  49: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  50: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  51: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  52: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadActual  53: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadActual  54: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  55: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  56: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  57: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  58: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadActual  59: 1 op, 1800.00 ns, 1.8000 us/op
WorkloadActual  60: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  61: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadActual  62: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadActual  63: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  64: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  65: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  66: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  67: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  68: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  69: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  70: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  71: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  72: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  73: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadActual  74: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  75: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadActual  76: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  77: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  78: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadActual  79: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  80: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  81: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadActual  82: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  83: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  84: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadActual  85: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadActual  86: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  87: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  88: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  89: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  90: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  91: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadActual  92: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  93: 1 op, 4000.00 ns, 4.0000 us/op
WorkloadActual  94: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  95: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  96: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual  97: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  98: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  99: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  100: 1 op, 1900.00 ns, 1.9000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadResult   2: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadResult   3: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadResult   4: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult   5: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadResult   6: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult   7: 1 op, 3600.00 ns, 3.6000 us/op
WorkloadResult   8: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadResult   9: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  10: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  11: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadResult  12: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  13: 1 op, 3300.00 ns, 3.3000 us/op
WorkloadResult  14: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  15: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadResult  16: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadResult  17: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadResult  18: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  19: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadResult  20: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadResult  21: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadResult  22: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  23: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadResult  24: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  25: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  26: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  27: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  28: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  29: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadResult  30: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadResult  31: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  32: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  33: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  34: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  35: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadResult  36: 1 op, 1800.00 ns, 1.8000 us/op
WorkloadResult  37: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  38: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadResult  39: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadResult  40: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  41: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  42: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  43: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  44: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadResult  45: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  46: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  47: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  48: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  49: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  50: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadResult  51: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  52: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadResult  53: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  54: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  55: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadResult  56: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  57: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadResult  58: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadResult  59: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  60: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  61: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadResult  62: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadResult  63: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  64: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  65: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  66: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  67: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  68: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadResult  69: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadResult  70: 1 op, 4000.00 ns, 4.0000 us/op
WorkloadResult  71: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadResult  72: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  73: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult  74: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  75: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  76: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadResult  77: 1 op, 1900.00 ns, 1.9000 us/op
GC:  0 0 0 0 1
Threading:  2 0 1

// AfterAll
// Benchmark Process 25368 has exited with code 0

Mean = 2.368 μs, StdErr = 0.049 μs (2.08%), N = 77, StdDev = 0.431 μs
Min = 1.800 μs, Q1 = 2.100 μs, Median = 2.300 μs, Q3 = 2.500 μs, Max = 4.000 μs
IQR = 0.400 μs, LowerFence = 1.500 μs, UpperFence = 3.100 μs
ConfidenceInterval = [2.199 μs; 2.536 μs] (CI 99.9%), Margin = 0.168 μs (7.10% of Mean)
Skewness = 1.5, Kurtosis = 5.35, MValue = 2.55

// **************************
// Benchmark: BenchmarkExecutorGenerics.findItemHash: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "078c7a70-4cae-4a74-a78d-1aeee91aeb0f.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorGenerics.findItemHash" --job "Default" --benchmarkId 4 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.11 (CoreCLR 4.700.20.56602, CoreFX 4.700.20.56604), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 274200.00 ns, 274.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadJitting  1: 1 op, 32960455900.00 ns, 32.9605 s/op

System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   1: 1 op, 60300.00 ns, 60.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   2: 1 op, 88000.00 ns, 88.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   3: 1 op, 53900.00 ns, 53.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   4: 1 op, 81400.00 ns, 81.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   5: 1 op, 82200.00 ns, 82.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   6: 1 op, 83900.00 ns, 83.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   7: 1 op, 86600.00 ns, 86.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   8: 1 op, 56100.00 ns, 56.1000 us/op

// BeforeActualRun
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   1: 1 op, 81700.00 ns, 81.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   2: 1 op, 65700.00 ns, 65.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   3: 1 op, 94300.00 ns, 94.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   4: 1 op, 53800.00 ns, 53.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   5: 1 op, 79400.00 ns, 79.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   6: 1 op, 85800.00 ns, 85.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   7: 1 op, 83200.00 ns, 83.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   8: 1 op, 82700.00 ns, 82.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   9: 1 op, 86300.00 ns, 86.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  10: 1 op, 91600.00 ns, 91.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  11: 1 op, 97200.00 ns, 97.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  12: 1 op, 77000.00 ns, 77.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  13: 1 op, 74200.00 ns, 74.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  14: 1 op, 72400.00 ns, 72.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  15: 1 op, 76700.00 ns, 76.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  16: 1 op, 70100.00 ns, 70.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  17: 1 op, 77800.00 ns, 77.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  18: 1 op, 78200.00 ns, 78.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  19: 1 op, 73000.00 ns, 73.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  20: 1 op, 81400.00 ns, 81.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  21: 1 op, 74000.00 ns, 74.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  22: 1 op, 82400.00 ns, 82.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  23: 1 op, 143900.00 ns, 143.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  24: 1 op, 78200.00 ns, 78.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  25: 1 op, 88400.00 ns, 88.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  26: 1 op, 120800.00 ns, 120.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  27: 1 op, 67400.00 ns, 67.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  28: 1 op, 56500.00 ns, 56.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  29: 1 op, 50800.00 ns, 50.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  30: 1 op, 49400.00 ns, 49.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  31: 1 op, 53400.00 ns, 53.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  32: 1 op, 61600.00 ns, 61.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  33: 1 op, 51700.00 ns, 51.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  34: 1 op, 59100.00 ns, 59.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  35: 1 op, 52700.00 ns, 52.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  36: 1 op, 54700.00 ns, 54.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  37: 1 op, 55000.00 ns, 55.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  38: 1 op, 53700.00 ns, 53.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  39: 1 op, 60400.00 ns, 60.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  40: 1 op, 51000.00 ns, 51.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  41: 1 op, 51900.00 ns, 51.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  42: 1 op, 57000.00 ns, 57.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  43: 1 op, 58700.00 ns, 58.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  44: 1 op, 54100.00 ns, 54.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  45: 1 op, 58000.00 ns, 58.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  46: 1 op, 49700.00 ns, 49.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  47: 1 op, 51700.00 ns, 51.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  48: 1 op, 50900.00 ns, 50.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  49: 1 op, 52300.00 ns, 52.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  50: 1 op, 53500.00 ns, 53.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  51: 1 op, 53300.00 ns, 53.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  52: 1 op, 54500.00 ns, 54.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  53: 1 op, 53100.00 ns, 53.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  54: 1 op, 54500.00 ns, 54.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  55: 1 op, 52800.00 ns, 52.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  56: 1 op, 63300.00 ns, 63.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  57: 1 op, 54800.00 ns, 54.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  58: 1 op, 50300.00 ns, 50.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  59: 1 op, 52800.00 ns, 52.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  60: 1 op, 52600.00 ns, 52.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  61: 1 op, 54700.00 ns, 54.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  62: 1 op, 44400.00 ns, 44.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  63: 1 op, 52500.00 ns, 52.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  64: 1 op, 53000.00 ns, 53.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  65: 1 op, 59500.00 ns, 59.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  66: 1 op, 52500.00 ns, 52.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  67: 1 op, 55700.00 ns, 55.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  68: 1 op, 53000.00 ns, 53.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  69: 1 op, 53400.00 ns, 53.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  70: 1 op, 55700.00 ns, 55.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  71: 1 op, 49000.00 ns, 49.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  72: 1 op, 54100.00 ns, 54.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  73: 1 op, 58700.00 ns, 58.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  74: 1 op, 50700.00 ns, 50.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  75: 1 op, 55000.00 ns, 55.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  76: 1 op, 58700.00 ns, 58.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  77: 1 op, 60700.00 ns, 60.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  78: 1 op, 52800.00 ns, 52.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  79: 1 op, 53200.00 ns, 53.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  80: 1 op, 50600.00 ns, 50.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  81: 1 op, 49100.00 ns, 49.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  82: 1 op, 53600.00 ns, 53.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  83: 1 op, 54500.00 ns, 54.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  84: 1 op, 60700.00 ns, 60.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  85: 1 op, 51300.00 ns, 51.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  86: 1 op, 55000.00 ns, 55.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  87: 1 op, 54100.00 ns, 54.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  88: 1 op, 52600.00 ns, 52.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  89: 1 op, 43500.00 ns, 43.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  90: 1 op, 48200.00 ns, 48.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  91: 1 op, 58900.00 ns, 58.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  92: 1 op, 65100.00 ns, 65.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  93: 1 op, 57300.00 ns, 57.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  94: 1 op, 56500.00 ns, 56.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  95: 1 op, 49200.00 ns, 49.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  96: 1 op, 51900.00 ns, 51.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  97: 1 op, 53800.00 ns, 53.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  98: 1 op, 47400.00 ns, 47.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  99: 1 op, 51800.00 ns, 51.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  100: 1 op, 56100.00 ns, 56.1000 us/op

// AfterActualRun
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadResult   1: 1 op, 81700.00 ns, 81.7000 us/op
WorkloadResult   2: 1 op, 65700.00 ns, 65.7000 us/op
WorkloadResult   3: 1 op, 53800.00 ns, 53.8000 us/op
WorkloadResult   4: 1 op, 79400.00 ns, 79.4000 us/op
WorkloadResult   5: 1 op, 85800.00 ns, 85.8000 us/op
WorkloadResult   6: 1 op, 83200.00 ns, 83.2000 us/op
WorkloadResult   7: 1 op, 82700.00 ns, 82.7000 us/op
WorkloadResult   8: 1 op, 86300.00 ns, 86.3000 us/op
WorkloadResult   9: 1 op, 77000.00 ns, 77.0000 us/op
WorkloadResult  10: 1 op, 74200.00 ns, 74.2000 us/op
WorkloadResult  11: 1 op, 72400.00 ns, 72.4000 us/op
WorkloadResult  12: 1 op, 76700.00 ns, 76.7000 us/op
WorkloadResult  13: 1 op, 70100.00 ns, 70.1000 us/op
WorkloadResult  14: 1 op, 77800.00 ns, 77.8000 us/op
WorkloadResult  15: 1 op, 78200.00 ns, 78.2000 us/op
WorkloadResult  16: 1 op, 73000.00 ns, 73.0000 us/op
WorkloadResult  17: 1 op, 81400.00 ns, 81.4000 us/op
WorkloadResult  18: 1 op, 74000.00 ns, 74.0000 us/op
WorkloadResult  19: 1 op, 82400.00 ns, 82.4000 us/op
WorkloadResult  20: 1 op, 78200.00 ns, 78.2000 us/op
WorkloadResult  21: 1 op, 67400.00 ns, 67.4000 us/op
WorkloadResult  22: 1 op, 56500.00 ns, 56.5000 us/op
WorkloadResult  23: 1 op, 50800.00 ns, 50.8000 us/op
WorkloadResult  24: 1 op, 49400.00 ns, 49.4000 us/op
WorkloadResult  25: 1 op, 53400.00 ns, 53.4000 us/op
WorkloadResult  26: 1 op, 61600.00 ns, 61.6000 us/op
WorkloadResult  27: 1 op, 51700.00 ns, 51.7000 us/op
WorkloadResult  28: 1 op, 59100.00 ns, 59.1000 us/op
WorkloadResult  29: 1 op, 52700.00 ns, 52.7000 us/op
WorkloadResult  30: 1 op, 54700.00 ns, 54.7000 us/op
WorkloadResult  31: 1 op, 55000.00 ns, 55.0000 us/op
WorkloadResult  32: 1 op, 53700.00 ns, 53.7000 us/op
WorkloadResult  33: 1 op, 60400.00 ns, 60.4000 us/op
WorkloadResult  34: 1 op, 51000.00 ns, 51.0000 us/op
WorkloadResult  35: 1 op, 51900.00 ns, 51.9000 us/op
WorkloadResult  36: 1 op, 57000.00 ns, 57.0000 us/op
WorkloadResult  37: 1 op, 58700.00 ns, 58.7000 us/op
WorkloadResult  38: 1 op, 54100.00 ns, 54.1000 us/op
WorkloadResult  39: 1 op, 58000.00 ns, 58.0000 us/op
WorkloadResult  40: 1 op, 49700.00 ns, 49.7000 us/op
WorkloadResult  41: 1 op, 51700.00 ns, 51.7000 us/op
WorkloadResult  42: 1 op, 50900.00 ns, 50.9000 us/op
WorkloadResult  43: 1 op, 52300.00 ns, 52.3000 us/op
WorkloadResult  44: 1 op, 53500.00 ns, 53.5000 us/op
WorkloadResult  45: 1 op, 53300.00 ns, 53.3000 us/op
WorkloadResult  46: 1 op, 54500.00 ns, 54.5000 us/op
WorkloadResult  47: 1 op, 53100.00 ns, 53.1000 us/op
WorkloadResult  48: 1 op, 54500.00 ns, 54.5000 us/op
WorkloadResult  49: 1 op, 52800.00 ns, 52.8000 us/op
WorkloadResult  50: 1 op, 63300.00 ns, 63.3000 us/op
WorkloadResult  51: 1 op, 54800.00 ns, 54.8000 us/op
WorkloadResult  52: 1 op, 50300.00 ns, 50.3000 us/op
WorkloadResult  53: 1 op, 52800.00 ns, 52.8000 us/op
WorkloadResult  54: 1 op, 52600.00 ns, 52.6000 us/op
WorkloadResult  55: 1 op, 54700.00 ns, 54.7000 us/op
WorkloadResult  56: 1 op, 44400.00 ns, 44.4000 us/op
WorkloadResult  57: 1 op, 52500.00 ns, 52.5000 us/op
WorkloadResult  58: 1 op, 53000.00 ns, 53.0000 us/op
WorkloadResult  59: 1 op, 59500.00 ns, 59.5000 us/op
WorkloadResult  60: 1 op, 52500.00 ns, 52.5000 us/op
WorkloadResult  61: 1 op, 55700.00 ns, 55.7000 us/op
WorkloadResult  62: 1 op, 53000.00 ns, 53.0000 us/op
WorkloadResult  63: 1 op, 53400.00 ns, 53.4000 us/op
WorkloadResult  64: 1 op, 55700.00 ns, 55.7000 us/op
WorkloadResult  65: 1 op, 49000.00 ns, 49.0000 us/op
WorkloadResult  66: 1 op, 54100.00 ns, 54.1000 us/op
WorkloadResult  67: 1 op, 58700.00 ns, 58.7000 us/op
WorkloadResult  68: 1 op, 50700.00 ns, 50.7000 us/op
WorkloadResult  69: 1 op, 55000.00 ns, 55.0000 us/op
WorkloadResult  70: 1 op, 58700.00 ns, 58.7000 us/op
WorkloadResult  71: 1 op, 60700.00 ns, 60.7000 us/op
WorkloadResult  72: 1 op, 52800.00 ns, 52.8000 us/op
WorkloadResult  73: 1 op, 53200.00 ns, 53.2000 us/op
WorkloadResult  74: 1 op, 50600.00 ns, 50.6000 us/op
WorkloadResult  75: 1 op, 49100.00 ns, 49.1000 us/op
WorkloadResult  76: 1 op, 53600.00 ns, 53.6000 us/op
WorkloadResult  77: 1 op, 54500.00 ns, 54.5000 us/op
WorkloadResult  78: 1 op, 60700.00 ns, 60.7000 us/op
WorkloadResult  79: 1 op, 51300.00 ns, 51.3000 us/op
WorkloadResult  80: 1 op, 55000.00 ns, 55.0000 us/op
WorkloadResult  81: 1 op, 54100.00 ns, 54.1000 us/op
WorkloadResult  82: 1 op, 52600.00 ns, 52.6000 us/op
WorkloadResult  83: 1 op, 43500.00 ns, 43.5000 us/op
WorkloadResult  84: 1 op, 48200.00 ns, 48.2000 us/op
WorkloadResult  85: 1 op, 58900.00 ns, 58.9000 us/op
WorkloadResult  86: 1 op, 65100.00 ns, 65.1000 us/op
WorkloadResult  87: 1 op, 57300.00 ns, 57.3000 us/op
WorkloadResult  88: 1 op, 56500.00 ns, 56.5000 us/op
WorkloadResult  89: 1 op, 49200.00 ns, 49.2000 us/op
WorkloadResult  90: 1 op, 51900.00 ns, 51.9000 us/op
WorkloadResult  91: 1 op, 53800.00 ns, 53.8000 us/op
WorkloadResult  92: 1 op, 47400.00 ns, 47.4000 us/op
WorkloadResult  93: 1 op, 51800.00 ns, 51.8000 us/op
WorkloadResult  94: 1 op, 56100.00 ns, 56.1000 us/op
GC:  0 0 0 416 1
Threading:  2 0 1

// AfterAll
// Benchmark Process 28148 has exited with code 0

Mean = 58.933 μs, StdErr = 1.091 μs (1.85%), N = 94, StdDev = 10.574 μs
Min = 43.500 μs, Q1 = 52.525 μs, Median = 54.500 μs, Q3 = 60.700 μs, Max = 86.300 μs
IQR = 8.175 μs, LowerFence = 40.263 μs, UpperFence = 72.963 μs
ConfidenceInterval = [55.227 μs; 62.639 μs] (CI 99.9%), Margin = 3.706 μs (6.29% of Mean)
Skewness = 1.21, Kurtosis = 3.24, MValue = 2.29

// **************************
// Benchmark: BenchmarkExecutorGenerics.findItemList: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "078c7a70-4cae-4a74-a78d-1aeee91aeb0f.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorGenerics.findItemList" --job "Default" --benchmarkId 5 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\078c7a70-4cae-4a74-a78d-1aeee91aeb0f\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.11 (CoreCLR 4.700.20.56602, CoreFX 4.700.20.56604), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 267500.00 ns, 267.5000 us/op
Name9999999
WorkloadJitting  1: 1 op, 32923036200.00 ns, 32.9230 s/op

Name9999999
WorkloadWarmup   1: 1 op, 41082800.00 ns, 41.0828 ms/op
Name9999999
WorkloadWarmup   2: 1 op, 41239800.00 ns, 41.2398 ms/op
Name9999999
WorkloadWarmup   3: 1 op, 27615700.00 ns, 27.6157 ms/op
Name9999999
WorkloadWarmup   4: 1 op, 27592700.00 ns, 27.5927 ms/op
Name9999999
WorkloadWarmup   5: 1 op, 29310900.00 ns, 29.3109 ms/op
Name9999999
WorkloadWarmup   6: 1 op, 27158100.00 ns, 27.1581 ms/op

// BeforeActualRun
Name9999999
WorkloadActual   1: 1 op, 27349300.00 ns, 27.3493 ms/op
Name9999999
WorkloadActual   2: 1 op, 27232600.00 ns, 27.2326 ms/op
Name9999999
WorkloadActual   3: 1 op, 27423400.00 ns, 27.4234 ms/op
Name9999999
WorkloadActual   4: 1 op, 27415100.00 ns, 27.4151 ms/op
Name9999999
WorkloadActual   5: 1 op, 28809600.00 ns, 28.8096 ms/op
Name9999999
WorkloadActual   6: 1 op, 27790500.00 ns, 27.7905 ms/op
Name9999999
WorkloadActual   7: 1 op, 27673500.00 ns, 27.6735 ms/op
Name9999999
WorkloadActual   8: 1 op, 27667300.00 ns, 27.6673 ms/op
Name9999999
WorkloadActual   9: 1 op, 27516600.00 ns, 27.5166 ms/op
Name9999999
WorkloadActual  10: 1 op, 27499400.00 ns, 27.4994 ms/op
Name9999999
WorkloadActual  11: 1 op, 27633300.00 ns, 27.6333 ms/op
Name9999999
WorkloadActual  12: 1 op, 28098700.00 ns, 28.0987 ms/op
Name9999999
WorkloadActual  13: 1 op, 27901400.00 ns, 27.9014 ms/op
Name9999999
WorkloadActual  14: 1 op, 30170200.00 ns, 30.1702 ms/op
Name9999999
WorkloadActual  15: 1 op, 27787000.00 ns, 27.7870 ms/op

// AfterActualRun
Name9999999
WorkloadResult   1: 1 op, 27349300.00 ns, 27.3493 ms/op
WorkloadResult   2: 1 op, 27232600.00 ns, 27.2326 ms/op
WorkloadResult   3: 1 op, 27423400.00 ns, 27.4234 ms/op
WorkloadResult   4: 1 op, 27415100.00 ns, 27.4151 ms/op
WorkloadResult   5: 1 op, 27790500.00 ns, 27.7905 ms/op
WorkloadResult   6: 1 op, 27673500.00 ns, 27.6735 ms/op
WorkloadResult   7: 1 op, 27667300.00 ns, 27.6673 ms/op
WorkloadResult   8: 1 op, 27516600.00 ns, 27.5166 ms/op
WorkloadResult   9: 1 op, 27499400.00 ns, 27.4994 ms/op
WorkloadResult  10: 1 op, 27633300.00 ns, 27.6333 ms/op
WorkloadResult  11: 1 op, 28098700.00 ns, 28.0987 ms/op
WorkloadResult  12: 1 op, 27901400.00 ns, 27.9014 ms/op
WorkloadResult  13: 1 op, 27787000.00 ns, 27.7870 ms/op
GC:  0 0 0 0 1
Threading:  2 0 1

// AfterAll
// Benchmark Process 21940 has exited with code 0

Mean = 27.614 ms, StdErr = 0.067 ms (0.24%), N = 13, StdDev = 0.241 ms
Min = 27.233 ms, Q1 = 27.423 ms, Median = 27.633 ms, Q3 = 27.787 ms, Max = 28.099 ms
IQR = 0.364 ms, LowerFence = 26.878 ms, UpperFence = 28.332 ms
ConfidenceInterval = [27.325 ms; 27.904 ms] (CI 99.9%), Margin = 0.289 ms (1.05% of Mean)
Skewness = 0.31, Kurtosis = 2.11, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\DALMentoring.Mentoring.BenchmarkExecutorGenerics-report.csv
  BenchmarkDotNet.Artifacts\results\DALMentoring.Mentoring.BenchmarkExecutorGenerics-report-github.md
  BenchmarkDotNet.Artifacts\results\DALMentoring.Mentoring.BenchmarkExecutorGenerics-report.html

// * Detailed results *
BenchmarkExecutorGenerics.cargarDiccionario: DefaultJob
Runtime = ; GC = 
There are not any results runs

BenchmarkExecutorGenerics.cargarHashTable: DefaultJob
Runtime = ; GC = 
There are not any results runs

BenchmarkExecutorGenerics.findItemDiccionario: DefaultJob
Runtime = .NET Core 3.1.11 (CoreCLR 4.700.20.56602, CoreFX 4.700.20.56604), X64 RyuJIT; GC = Concurrent Workstation
Mean = 2.368 μs, StdErr = 0.049 μs (2.08%), N = 77, StdDev = 0.431 μs
Min = 1.800 μs, Q1 = 2.100 μs, Median = 2.300 μs, Q3 = 2.500 μs, Max = 4.000 μs
IQR = 0.400 μs, LowerFence = 1.500 μs, UpperFence = 3.100 μs
ConfidenceInterval = [2.199 μs; 2.536 μs] (CI 99.9%), Margin = 0.168 μs (7.10% of Mean)
Skewness = 1.5, Kurtosis = 5.35, MValue = 2.55
-------------------- Histogram --------------------
[1.767 μs ; 2.067 μs) | @@@@@@@@@@@@@@@@
[2.067 μs ; 2.333 μs) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[2.333 μs ; 2.633 μs) | @@@@@@@@@@@@@@@@@
[2.633 μs ; 2.933 μs) | @@@@@
[2.933 μs ; 3.167 μs) | @@
[3.167 μs ; 3.433 μs) | @@@@
[3.433 μs ; 3.733 μs) | @
[3.733 μs ; 3.867 μs) | 
[3.867 μs ; 4.133 μs) | @
---------------------------------------------------

BenchmarkExecutorGenerics.findItemHash: DefaultJob
Runtime = .NET Core 3.1.11 (CoreCLR 4.700.20.56602, CoreFX 4.700.20.56604), X64 RyuJIT; GC = Concurrent Workstation
Mean = 58.933 μs, StdErr = 1.091 μs (1.85%), N = 94, StdDev = 10.574 μs
Min = 43.500 μs, Q1 = 52.525 μs, Median = 54.500 μs, Q3 = 60.700 μs, Max = 86.300 μs
IQR = 8.175 μs, LowerFence = 40.263 μs, UpperFence = 72.963 μs
ConfidenceInterval = [55.227 μs; 62.639 μs] (CI 99.9%), Margin = 3.706 μs (6.29% of Mean)
Skewness = 1.21, Kurtosis = 3.24, MValue = 2.29
-------------------- Histogram --------------------
[42.798 μs ; 48.948 μs) | @@@@
[48.948 μs ; 55.052 μs) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[55.052 μs ; 61.702 μs) | @@@@@@@@@@@@@@@@@@
[61.702 μs ; 68.402 μs) | @@@@
[68.402 μs ; 75.202 μs) | @@@@@
[75.202 μs ; 82.752 μs) | @@@@@@@@@@
[82.752 μs ; 89.352 μs) | @@@
---------------------------------------------------

BenchmarkExecutorGenerics.findItemList: DefaultJob
Runtime = .NET Core 3.1.11 (CoreCLR 4.700.20.56602, CoreFX 4.700.20.56604), X64 RyuJIT; GC = Concurrent Workstation
Mean = 27.614 ms, StdErr = 0.067 ms (0.24%), N = 13, StdDev = 0.241 ms
Min = 27.233 ms, Q1 = 27.423 ms, Median = 27.633 ms, Q3 = 27.787 ms, Max = 28.099 ms
IQR = 0.364 ms, LowerFence = 26.878 ms, UpperFence = 28.332 ms
ConfidenceInterval = [27.325 ms; 27.904 ms] (CI 99.9%), Margin = 0.289 ms (1.05% of Mean)
Skewness = 0.31, Kurtosis = 2.11, MValue = 2
-------------------- Histogram --------------------
[27.098 ms ; 28.233 ms) | @@@@@@@@@@@@@
---------------------------------------------------

BenchmarkExecutorGenerics.cargarLista: DefaultJob
Runtime = .NET Core 3.1.11 (CoreCLR 4.700.20.56602, CoreFX 4.700.20.56604), X64 RyuJIT; GC = Concurrent Workstation
Mean = 65.072 ms, StdErr = 0.193 ms (0.30%), N = 13, StdDev = 0.696 ms
Min = 64.000 ms, Q1 = 64.615 ms, Median = 65.076 ms, Q3 = 65.453 ms, Max = 66.521 ms
IQR = 0.838 ms, LowerFence = 63.358 ms, UpperFence = 66.710 ms
ConfidenceInterval = [64.238 ms; 65.905 ms] (CI 99.9%), Margin = 0.833 ms (1.28% of Mean)
Skewness = 0.46, Kurtosis = 2.25, MValue = 2
-------------------- Histogram --------------------
[63.612 ms ; 66.805 ms) | @@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.12.1, OS=Windows 10.0.18363.1379 (1909/November2018Update/19H2)
AMD Ryzen 5 2600, 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=5.0.102
  [Host]     : .NET Core 3.1.11 (CoreCLR 4.700.20.56602, CoreFX 4.700.20.56604), X64 RyuJIT
  DefaultJob : .NET Core 3.1.11 (CoreCLR 4.700.20.56602, CoreFX 4.700.20.56604), X64 RyuJIT


|              Method |          Mean |       Error |      StdDev |        Median | Rank | Gen 0 | Gen 1 | Gen 2 | Allocated |
|-------------------- |--------------:|------------:|------------:|--------------:|-----:|------:|------:|------:|----------:|
|   cargarDiccionario |            NA |          NA |          NA |            NA |    ? |     - |     - |     - |         - |
|     cargarHashTable |            NA |          NA |          NA |            NA |    ? |     - |     - |     - |         - |
| findItemDiccionario |      2.368 μs |   0.1682 μs |   0.4312 μs |      2.300 μs |    1 |     - |     - |     - |         - |
|        findItemHash |     58.933 μs |   3.7061 μs |  10.5736 μs |     54.500 μs |    2 |     - |     - |     - |     416 B |
|        findItemList | 27,614.469 μs | 289.1107 μs | 241.4205 μs | 27,633.300 μs |    3 |     - |     - |     - |         - |
|         cargarLista | 65,071.715 μs | 833.2771 μs | 695.8241 μs | 65,076.200 μs |    4 |     - |     - |     - |         - |

Benchmarks with issues:
  BenchmarkExecutorGenerics.cargarDiccionario: DefaultJob
  BenchmarkExecutorGenerics.cargarHashTable: DefaultJob

// * Warnings *
MinIterationTime
  BenchmarkExecutorGenerics.findItemDiccionario: Default -> The minimum observed iteration time is 1.8000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  BenchmarkExecutorGenerics.findItemHash: Default        -> The minimum observed iteration time is 43.5000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  BenchmarkExecutorGenerics.findItemList: Default        -> The minimum observed iteration time is 27.2326 ms which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  BenchmarkExecutorGenerics.cargarLista: Default         -> The minimum observed iteration time is 64.0000 ms which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.

// * Hints *
Outliers
  BenchmarkExecutorGenerics.findItemDiccionario: Default -> 23 outliers were removed (9.00 μs..31.30 μs)
  BenchmarkExecutorGenerics.findItemHash: Default        -> 6 outliers were removed (88.40 μs..143.90 μs)
  BenchmarkExecutorGenerics.findItemList: Default        -> 2 outliers were removed (28.81 ms, 30.17 ms)
  BenchmarkExecutorGenerics.cargarLista: Default         -> 2 outliers were removed (68.64 ms, 517.65 ms)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Median    : Value separating the higher half of all measurements (50th percentile)
  Rank      : Relative position of current benchmark mean among all benchmarks (Arabic style)
  Gen 0     : GC Generation 0 collects per 1000 operations
  Gen 1     : GC Generation 1 collects per 1000 operations
  Gen 2     : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 μs      : 1 Microsecond (0.000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:13:03 (783.19 sec), executed benchmarks: 6

Global total time: 00:13:08 (788.97 sec), executed benchmarks: 6
// * Artifacts cleanup *
