// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 4 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\3b5efa77-2e31-49b1-9df2-b85a96299d77
// command took 3,64s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\3b5efa77-2e31-49b1-9df2-b85a96299d77
// command took 4,17s and exited with 0
// ***** Done, took 00:00:08 (8.18 sec)   *****
// Found 4 benchmarks:
//   BenchmarkExecutorFinal.cargarDiccionario: DefaultJob
//   BenchmarkExecutorFinal.cargarHashTable: DefaultJob
//   BenchmarkExecutorFinal.findItemDiccionario: DefaultJob
//   BenchmarkExecutorFinal.findItemHash: DefaultJob

// **************************
// Benchmark: BenchmarkExecutorFinal.cargarDiccionario: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "3b5efa77-2e31-49b1-9df2-b85a96299d77.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorFinal.cargarDiccionario" --job "Default" --benchmarkId 0 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\3b5efa77-2e31-49b1-9df2-b85a96299d77\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 353200.00 ns, 353.2000 us/op
WorkloadJitting  1: 1 op, 51544632400.00 ns, 51.5446 s/op


System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.ArgumentException: An item with the same key has already been added. Key: 1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at DALMentoring.Mentoring.Helpers.ListManager.cargarDiccionario() in D:\Proyectos\Mentoring\DALMentoring\Mentoring\Helpers\ListManager.cs:line 27
   at DALMentoring.Mentoring.BenchmarkExecutorFinal.cargarDiccionario() in D:\Proyectos\Mentoring\DALMentoring\Mentoring\BenchmarkExecutorFinal.cs:line 20
   at BenchmarkDotNet.Autogenerated.Runnable_0.WorkloadActionNoUnroll(Int64 invokeCount) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\3b5efa77-2e31-49b1-9df2-b85a96299d77\3b5efa77-2e31-49b1-9df2-b85a96299d77.notcs:line 838
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineStage.Run(IStoppingCriteria criteria, Int64 invokeCount, IterationMode mode, IterationStage stage, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineWarmupStage.Run(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor, RunStrategy runStrategy)
   at BenchmarkDotNet.Engines.EngineWarmupStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, RunStrategy runStrategy)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\3b5efa77-2e31-49b1-9df2-b85a96299d77\3b5efa77-2e31-49b1-9df2-b85a96299d77.notcs:line 170
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\3b5efa77-2e31-49b1-9df2-b85a96299d77\3b5efa77-2e31-49b1-9df2-b85a96299d77.notcs:line 52
// AfterAll
ExitCode != 0
// Benchmark Process 5840 has exited with code -1
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: BenchmarkExecutorFinal.cargarHashTable: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "3b5efa77-2e31-49b1-9df2-b85a96299d77.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorFinal.cargarHashTable" --job "Default" --benchmarkId 1 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\3b5efa77-2e31-49b1-9df2-b85a96299d77\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 271400.00 ns, 271.4000 us/op
WorkloadJitting  1: 1 op, 52551235200.00 ns, 52.5512 s/op


System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.ArgumentException: Item has already been added. Key in dictionary: '1'  Key being added: '1'
   at System.Collections.Hashtable.Insert(Object key, Object nvalue, Boolean add)
   at DALMentoring.Mentoring.Helpers.ListManager.cargarHashTable() in D:\Proyectos\Mentoring\DALMentoring\Mentoring\Helpers\ListManager.cs:line 35
   at DALMentoring.Mentoring.BenchmarkExecutorFinal.cargarHashTable() in D:\Proyectos\Mentoring\DALMentoring\Mentoring\BenchmarkExecutorFinal.cs:line 26
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionNoUnroll(Int64 invokeCount) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\3b5efa77-2e31-49b1-9df2-b85a96299d77\3b5efa77-2e31-49b1-9df2-b85a96299d77.notcs:line 1570
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineStage.Run(IStoppingCriteria criteria, Int64 invokeCount, IterationMode mode, IterationStage stage, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineWarmupStage.Run(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor, RunStrategy runStrategy)
   at BenchmarkDotNet.Engines.EngineWarmupStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, RunStrategy runStrategy)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\3b5efa77-2e31-49b1-9df2-b85a96299d77\3b5efa77-2e31-49b1-9df2-b85a96299d77.notcs:line 902
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\3b5efa77-2e31-49b1-9df2-b85a96299d77\3b5efa77-2e31-49b1-9df2-b85a96299d77.notcs:line 52
// AfterAll
ExitCode != 0
// Benchmark Process 6512 has exited with code -1
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: BenchmarkExecutorFinal.findItemDiccionario: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "3b5efa77-2e31-49b1-9df2-b85a96299d77.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorFinal.findItemDiccionario" --job "Default" --benchmarkId 2 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\3b5efa77-2e31-49b1-9df2-b85a96299d77\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 298400.00 ns, 298.4000 us/op
WorkloadJitting  1: 1 op, 50134132000.00 ns, 50.1341 s/op

WorkloadWarmup   1: 1 op, 35800.00 ns, 35.8000 us/op
WorkloadWarmup   2: 1 op, 30600.00 ns, 30.6000 us/op
WorkloadWarmup   3: 1 op, 28400.00 ns, 28.4000 us/op
WorkloadWarmup   4: 1 op, 27600.00 ns, 27.6000 us/op
WorkloadWarmup   5: 1 op, 33700.00 ns, 33.7000 us/op
WorkloadWarmup   6: 1 op, 33100.00 ns, 33.1000 us/op
WorkloadWarmup   7: 1 op, 26600.00 ns, 26.6000 us/op
WorkloadWarmup   8: 1 op, 9300.00 ns, 9.3000 us/op
WorkloadWarmup   9: 1 op, 15800.00 ns, 15.8000 us/op
WorkloadWarmup  10: 1 op, 16800.00 ns, 16.8000 us/op
WorkloadWarmup  11: 1 op, 12500.00 ns, 12.5000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 12600.00 ns, 12.6000 us/op
WorkloadActual   2: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual   3: 1 op, 13700.00 ns, 13.7000 us/op
WorkloadActual   4: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual   5: 1 op, 14700.00 ns, 14.7000 us/op
WorkloadActual   6: 1 op, 10900.00 ns, 10.9000 us/op
WorkloadActual   7: 1 op, 11400.00 ns, 11.4000 us/op
WorkloadActual   8: 1 op, 10700.00 ns, 10.7000 us/op
WorkloadActual   9: 1 op, 11300.00 ns, 11.3000 us/op
WorkloadActual  10: 1 op, 13200.00 ns, 13.2000 us/op
WorkloadActual  11: 1 op, 15000.00 ns, 15.0000 us/op
WorkloadActual  12: 1 op, 16700.00 ns, 16.7000 us/op
WorkloadActual  13: 1 op, 11700.00 ns, 11.7000 us/op
WorkloadActual  14: 1 op, 10700.00 ns, 10.7000 us/op
WorkloadActual  15: 1 op, 11400.00 ns, 11.4000 us/op
WorkloadActual  16: 1 op, 12200.00 ns, 12.2000 us/op
WorkloadActual  17: 1 op, 11200.00 ns, 11.2000 us/op
WorkloadActual  18: 1 op, 11100.00 ns, 11.1000 us/op
WorkloadActual  19: 1 op, 9800.00 ns, 9.8000 us/op
WorkloadActual  20: 1 op, 18700.00 ns, 18.7000 us/op
WorkloadActual  21: 1 op, 18200.00 ns, 18.2000 us/op
WorkloadActual  22: 1 op, 33000.00 ns, 33.0000 us/op
WorkloadActual  23: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadActual  24: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadActual  25: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadActual  26: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  27: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  28: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  29: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  30: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  31: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual  32: 1 op, 3500.00 ns, 3.5000 us/op
WorkloadActual  33: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual  34: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  35: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  36: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  37: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  38: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadActual  39: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  40: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadActual  41: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  42: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadActual  43: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  44: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  45: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  46: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  47: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  48: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadActual  49: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadActual  50: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadActual  51: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  52: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  53: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  54: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  55: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  56: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  57: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadActual  58: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  59: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadActual  60: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  61: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual  62: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  63: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  64: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  65: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual  66: 1 op, 3700.00 ns, 3.7000 us/op
WorkloadActual  67: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadActual  68: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadActual  69: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  70: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  71: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  72: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadActual  73: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadActual  74: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  75: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  76: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  77: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadActual  78: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  79: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  80: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  81: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  82: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  83: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  84: 1 op, 1600.00 ns, 1.6000 us/op
WorkloadActual  85: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  86: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  87: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  88: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadActual  89: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadActual  90: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadActual  91: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadActual  92: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual  93: 1 op, 3500.00 ns, 3.5000 us/op
WorkloadActual  94: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  95: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadActual  96: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual  97: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadActual  98: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual  99: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadActual  100: 1 op, 2400.00 ns, 2.4000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult   2: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult   3: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadResult   4: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadResult   5: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadResult   6: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult   7: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult   8: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult   9: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadResult  10: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  11: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult  12: 1 op, 3500.00 ns, 3.5000 us/op
WorkloadResult  13: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult  14: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  15: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  16: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  17: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  18: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadResult  19: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  20: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadResult  21: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  22: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadResult  23: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  24: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  25: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  26: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  27: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadResult  28: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadResult  29: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadResult  30: 1 op, 2000.00 ns, 2.0000 us/op
WorkloadResult  31: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  32: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  33: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  34: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  35: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  36: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  37: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadResult  38: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  39: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadResult  40: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  41: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult  42: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  43: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  44: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  45: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult  46: 1 op, 3700.00 ns, 3.7000 us/op
WorkloadResult  47: 1 op, 3200.00 ns, 3.2000 us/op
WorkloadResult  48: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadResult  49: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  50: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  51: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  52: 1 op, 2300.00 ns, 2.3000 us/op
WorkloadResult  53: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadResult  54: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  55: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  56: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  57: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadResult  58: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadResult  59: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  60: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  61: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  62: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  63: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  64: 1 op, 1600.00 ns, 1.6000 us/op
WorkloadResult  65: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  66: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  67: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  68: 1 op, 2100.00 ns, 2.1000 us/op
WorkloadResult  69: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadResult  70: 1 op, 2200.00 ns, 2.2000 us/op
WorkloadResult  71: 1 op, 2800.00 ns, 2.8000 us/op
WorkloadResult  72: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult  73: 1 op, 3500.00 ns, 3.5000 us/op
WorkloadResult  74: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  75: 1 op, 2400.00 ns, 2.4000 us/op
WorkloadResult  76: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult  77: 1 op, 1900.00 ns, 1.9000 us/op
WorkloadResult  78: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult  79: 1 op, 2500.00 ns, 2.5000 us/op
WorkloadResult  80: 1 op, 2400.00 ns, 2.4000 us/op
GC:  0 0 0 0 1
Threading:  2 0 1

// AfterAll
// Benchmark Process 22804 has exited with code 0

Mean = 2.643 μs, StdErr = 0.046 μs (1.75%), N = 80, StdDev = 0.413 μs
Min = 1.600 μs, Q1 = 2.400 μs, Median = 2.600 μs, Q3 = 2.900 μs, Max = 3.700 μs
IQR = 0.500 μs, LowerFence = 1.650 μs, UpperFence = 3.650 μs
ConfidenceInterval = [2.485 μs; 2.800 μs] (CI 99.9%), Margin = 0.158 μs (5.98% of Mean)
Skewness = 0.22, Kurtosis = 2.79, MValue = 2.38

// **************************
// Benchmark: BenchmarkExecutorFinal.findItemHash: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "3b5efa77-2e31-49b1-9df2-b85a96299d77.dll" --benchmarkName "DALMentoring.Mentoring.BenchmarkExecutorFinal.findItemHash" --job "Default" --benchmarkId 3 in D:\Proyectos\Mentoring\Mentoring\bin\Release\netcoreapp3.1\3b5efa77-2e31-49b1-9df2-b85a96299d77\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 276700.00 ns, 276.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadJitting  1: 1 op, 53561396600.00 ns, 53.5614 s/op

System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   1: 1 op, 53600.00 ns, 53.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   2: 1 op, 101800.00 ns, 101.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   3: 1 op, 77700.00 ns, 77.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   4: 1 op, 87300.00 ns, 87.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   5: 1 op, 87800.00 ns, 87.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadWarmup   6: 1 op, 79400.00 ns, 79.4000 us/op

// BeforeActualRun
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   1: 1 op, 92100.00 ns, 92.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   2: 1 op, 57100.00 ns, 57.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   3: 1 op, 92500.00 ns, 92.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   4: 1 op, 88500.00 ns, 88.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   5: 1 op, 95500.00 ns, 95.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   6: 1 op, 92300.00 ns, 92.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   7: 1 op, 90700.00 ns, 90.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   8: 1 op, 85000.00 ns, 85.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual   9: 1 op, 82700.00 ns, 82.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  10: 1 op, 85400.00 ns, 85.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  11: 1 op, 119200.00 ns, 119.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  12: 1 op, 73100.00 ns, 73.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  13: 1 op, 110600.00 ns, 110.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  14: 1 op, 83100.00 ns, 83.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  15: 1 op, 71700.00 ns, 71.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  16: 1 op, 78900.00 ns, 78.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  17: 1 op, 85000.00 ns, 85.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  18: 1 op, 86300.00 ns, 86.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  19: 1 op, 100300.00 ns, 100.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  20: 1 op, 115300.00 ns, 115.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  21: 1 op, 78800.00 ns, 78.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  22: 1 op, 90800.00 ns, 90.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  23: 1 op, 97700.00 ns, 97.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  24: 1 op, 86400.00 ns, 86.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  25: 1 op, 90600.00 ns, 90.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  26: 1 op, 116100.00 ns, 116.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  27: 1 op, 89200.00 ns, 89.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  28: 1 op, 57400.00 ns, 57.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  29: 1 op, 53100.00 ns, 53.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  30: 1 op, 49100.00 ns, 49.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  31: 1 op, 52900.00 ns, 52.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  32: 1 op, 55300.00 ns, 55.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  33: 1 op, 51000.00 ns, 51.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  34: 1 op, 66200.00 ns, 66.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  35: 1 op, 56200.00 ns, 56.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  36: 1 op, 65500.00 ns, 65.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  37: 1 op, 59300.00 ns, 59.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  38: 1 op, 52800.00 ns, 52.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  39: 1 op, 47600.00 ns, 47.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  40: 1 op, 54400.00 ns, 54.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  41: 1 op, 56700.00 ns, 56.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  42: 1 op, 68500.00 ns, 68.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  43: 1 op, 53800.00 ns, 53.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  44: 1 op, 48700.00 ns, 48.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  45: 1 op, 55200.00 ns, 55.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  46: 1 op, 58600.00 ns, 58.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  47: 1 op, 64000.00 ns, 64.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  48: 1 op, 47200.00 ns, 47.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  49: 1 op, 57500.00 ns, 57.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  50: 1 op, 53000.00 ns, 53.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  51: 1 op, 59100.00 ns, 59.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  52: 1 op, 51200.00 ns, 51.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  53: 1 op, 54100.00 ns, 54.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  54: 1 op, 53500.00 ns, 53.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  55: 1 op, 58500.00 ns, 58.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  56: 1 op, 49500.00 ns, 49.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  57: 1 op, 49200.00 ns, 49.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  58: 1 op, 58800.00 ns, 58.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  59: 1 op, 56800.00 ns, 56.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  60: 1 op, 57100.00 ns, 57.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  61: 1 op, 49400.00 ns, 49.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  62: 1 op, 53500.00 ns, 53.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  63: 1 op, 56600.00 ns, 56.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  64: 1 op, 47300.00 ns, 47.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  65: 1 op, 49300.00 ns, 49.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  66: 1 op, 52700.00 ns, 52.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  67: 1 op, 59600.00 ns, 59.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  68: 1 op, 54800.00 ns, 54.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  69: 1 op, 59800.00 ns, 59.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  70: 1 op, 56600.00 ns, 56.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  71: 1 op, 50500.00 ns, 50.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  72: 1 op, 49900.00 ns, 49.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  73: 1 op, 49600.00 ns, 49.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  74: 1 op, 49400.00 ns, 49.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  75: 1 op, 47800.00 ns, 47.8000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  76: 1 op, 77700.00 ns, 77.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  77: 1 op, 43100.00 ns, 43.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  78: 1 op, 49600.00 ns, 49.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  79: 1 op, 49900.00 ns, 49.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  80: 1 op, 46300.00 ns, 46.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  81: 1 op, 46500.00 ns, 46.5000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  82: 1 op, 54600.00 ns, 54.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  83: 1 op, 52900.00 ns, 52.9000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  84: 1 op, 57200.00 ns, 57.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  85: 1 op, 49700.00 ns, 49.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  86: 1 op, 47400.00 ns, 47.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  87: 1 op, 56600.00 ns, 56.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  88: 1 op, 55300.00 ns, 55.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  89: 1 op, 48700.00 ns, 48.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  90: 1 op, 47600.00 ns, 47.6000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  91: 1 op, 51700.00 ns, 51.7000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  92: 1 op, 71200.00 ns, 71.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  93: 1 op, 51400.00 ns, 51.4000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  94: 1 op, 57200.00 ns, 57.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  95: 1 op, 49100.00 ns, 49.1000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  96: 1 op, 52200.00 ns, 52.2000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  97: 1 op, 51000.00 ns, 51.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  98: 1 op, 52000.00 ns, 52.0000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  99: 1 op, 74300.00 ns, 74.3000 us/op
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadActual  100: 1 op, 50300.00 ns, 50.3000 us/op

// AfterActualRun
System.Linq.Enumerable+WhereEnumerableIterator`1[System.Int32]
WorkloadResult   1: 1 op, 92100.00 ns, 92.1000 us/op
WorkloadResult   2: 1 op, 57100.00 ns, 57.1000 us/op
WorkloadResult   3: 1 op, 92500.00 ns, 92.5000 us/op
WorkloadResult   4: 1 op, 88500.00 ns, 88.5000 us/op
WorkloadResult   5: 1 op, 95500.00 ns, 95.5000 us/op
WorkloadResult   6: 1 op, 92300.00 ns, 92.3000 us/op
WorkloadResult   7: 1 op, 90700.00 ns, 90.7000 us/op
WorkloadResult   8: 1 op, 85000.00 ns, 85.0000 us/op
WorkloadResult   9: 1 op, 82700.00 ns, 82.7000 us/op
WorkloadResult  10: 1 op, 85400.00 ns, 85.4000 us/op
WorkloadResult  11: 1 op, 73100.00 ns, 73.1000 us/op
WorkloadResult  12: 1 op, 110600.00 ns, 110.6000 us/op
WorkloadResult  13: 1 op, 83100.00 ns, 83.1000 us/op
WorkloadResult  14: 1 op, 71700.00 ns, 71.7000 us/op
WorkloadResult  15: 1 op, 78900.00 ns, 78.9000 us/op
WorkloadResult  16: 1 op, 85000.00 ns, 85.0000 us/op
WorkloadResult  17: 1 op, 86300.00 ns, 86.3000 us/op
WorkloadResult  18: 1 op, 100300.00 ns, 100.3000 us/op
WorkloadResult  19: 1 op, 78800.00 ns, 78.8000 us/op
WorkloadResult  20: 1 op, 90800.00 ns, 90.8000 us/op
WorkloadResult  21: 1 op, 97700.00 ns, 97.7000 us/op
WorkloadResult  22: 1 op, 86400.00 ns, 86.4000 us/op
WorkloadResult  23: 1 op, 90600.00 ns, 90.6000 us/op
WorkloadResult  24: 1 op, 89200.00 ns, 89.2000 us/op
WorkloadResult  25: 1 op, 57400.00 ns, 57.4000 us/op
WorkloadResult  26: 1 op, 53100.00 ns, 53.1000 us/op
WorkloadResult  27: 1 op, 49100.00 ns, 49.1000 us/op
WorkloadResult  28: 1 op, 52900.00 ns, 52.9000 us/op
WorkloadResult  29: 1 op, 55300.00 ns, 55.3000 us/op
WorkloadResult  30: 1 op, 51000.00 ns, 51.0000 us/op
WorkloadResult  31: 1 op, 66200.00 ns, 66.2000 us/op
WorkloadResult  32: 1 op, 56200.00 ns, 56.2000 us/op
WorkloadResult  33: 1 op, 65500.00 ns, 65.5000 us/op
WorkloadResult  34: 1 op, 59300.00 ns, 59.3000 us/op
WorkloadResult  35: 1 op, 52800.00 ns, 52.8000 us/op
WorkloadResult  36: 1 op, 47600.00 ns, 47.6000 us/op
WorkloadResult  37: 1 op, 54400.00 ns, 54.4000 us/op
WorkloadResult  38: 1 op, 56700.00 ns, 56.7000 us/op
WorkloadResult  39: 1 op, 68500.00 ns, 68.5000 us/op
WorkloadResult  40: 1 op, 53800.00 ns, 53.8000 us/op
WorkloadResult  41: 1 op, 48700.00 ns, 48.7000 us/op
WorkloadResult  42: 1 op, 55200.00 ns, 55.2000 us/op
WorkloadResult  43: 1 op, 58600.00 ns, 58.6000 us/op
WorkloadResult  44: 1 op, 64000.00 ns, 64.0000 us/op
WorkloadResult  45: 1 op, 47200.00 ns, 47.2000 us/op
WorkloadResult  46: 1 op, 57500.00 ns, 57.5000 us/op
WorkloadResult  47: 1 op, 53000.00 ns, 53.0000 us/op
WorkloadResult  48: 1 op, 59100.00 ns, 59.1000 us/op
WorkloadResult  49: 1 op, 51200.00 ns, 51.2000 us/op
WorkloadResult  50: 1 op, 54100.00 ns, 54.1000 us/op
WorkloadResult  51: 1 op, 53500.00 ns, 53.5000 us/op
WorkloadResult  52: 1 op, 58500.00 ns, 58.5000 us/op
WorkloadResult  53: 1 op, 49500.00 ns, 49.5000 us/op
WorkloadResult  54: 1 op, 49200.00 ns, 49.2000 us/op
WorkloadResult  55: 1 op, 58800.00 ns, 58.8000 us/op
WorkloadResult  56: 1 op, 56800.00 ns, 56.8000 us/op
WorkloadResult  57: 1 op, 57100.00 ns, 57.1000 us/op
WorkloadResult  58: 1 op, 49400.00 ns, 49.4000 us/op
WorkloadResult  59: 1 op, 53500.00 ns, 53.5000 us/op
WorkloadResult  60: 1 op, 56600.00 ns, 56.6000 us/op
WorkloadResult  61: 1 op, 47300.00 ns, 47.3000 us/op
WorkloadResult  62: 1 op, 49300.00 ns, 49.3000 us/op
WorkloadResult  63: 1 op, 52700.00 ns, 52.7000 us/op
WorkloadResult  64: 1 op, 59600.00 ns, 59.6000 us/op
WorkloadResult  65: 1 op, 54800.00 ns, 54.8000 us/op
WorkloadResult  66: 1 op, 59800.00 ns, 59.8000 us/op
WorkloadResult  67: 1 op, 56600.00 ns, 56.6000 us/op
WorkloadResult  68: 1 op, 50500.00 ns, 50.5000 us/op
WorkloadResult  69: 1 op, 49900.00 ns, 49.9000 us/op
WorkloadResult  70: 1 op, 49600.00 ns, 49.6000 us/op
WorkloadResult  71: 1 op, 49400.00 ns, 49.4000 us/op
WorkloadResult  72: 1 op, 47800.00 ns, 47.8000 us/op
WorkloadResult  73: 1 op, 77700.00 ns, 77.7000 us/op
WorkloadResult  74: 1 op, 43100.00 ns, 43.1000 us/op
WorkloadResult  75: 1 op, 49600.00 ns, 49.6000 us/op
WorkloadResult  76: 1 op, 49900.00 ns, 49.9000 us/op
WorkloadResult  77: 1 op, 46300.00 ns, 46.3000 us/op
WorkloadResult  78: 1 op, 46500.00 ns, 46.5000 us/op
WorkloadResult  79: 1 op, 54600.00 ns, 54.6000 us/op
WorkloadResult  80: 1 op, 52900.00 ns, 52.9000 us/op
WorkloadResult  81: 1 op, 57200.00 ns, 57.2000 us/op
WorkloadResult  82: 1 op, 49700.00 ns, 49.7000 us/op
WorkloadResult  83: 1 op, 47400.00 ns, 47.4000 us/op
WorkloadResult  84: 1 op, 56600.00 ns, 56.6000 us/op
WorkloadResult  85: 1 op, 55300.00 ns, 55.3000 us/op
WorkloadResult  86: 1 op, 48700.00 ns, 48.7000 us/op
WorkloadResult  87: 1 op, 47600.00 ns, 47.6000 us/op
WorkloadResult  88: 1 op, 51700.00 ns, 51.7000 us/op
WorkloadResult  89: 1 op, 71200.00 ns, 71.2000 us/op
WorkloadResult  90: 1 op, 51400.00 ns, 51.4000 us/op
WorkloadResult  91: 1 op, 57200.00 ns, 57.2000 us/op
WorkloadResult  92: 1 op, 49100.00 ns, 49.1000 us/op
WorkloadResult  93: 1 op, 52200.00 ns, 52.2000 us/op
WorkloadResult  94: 1 op, 51000.00 ns, 51.0000 us/op
WorkloadResult  95: 1 op, 52000.00 ns, 52.0000 us/op
WorkloadResult  96: 1 op, 74300.00 ns, 74.3000 us/op
WorkloadResult  97: 1 op, 50300.00 ns, 50.3000 us/op
GC:  0 0 0 416 1
Threading:  2 0 1

// AfterAll
// Benchmark Process 23060 has exited with code 0

Mean = 62.334 μs, StdErr = 1.629 μs (2.61%), N = 97, StdDev = 16.048 μs
Min = 43.100 μs, Q1 = 50.500 μs, Median = 56.200 μs, Q3 = 71.700 μs, Max = 110.600 μs
IQR = 21.200 μs, LowerFence = 18.700 μs, UpperFence = 103.500 μs
ConfidenceInterval = [56.803 μs; 67.865 μs] (CI 99.9%), Margin = 5.531 μs (8.87% of Mean)
Skewness = 1.1, Kurtosis = 2.94, MValue = 2.68

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\DALMentoring.Mentoring.BenchmarkExecutorFinal-report.csv
  BenchmarkDotNet.Artifacts\results\DALMentoring.Mentoring.BenchmarkExecutorFinal-report-github.md
  BenchmarkDotNet.Artifacts\results\DALMentoring.Mentoring.BenchmarkExecutorFinal-report.html

// * Detailed results *
BenchmarkExecutorFinal.cargarDiccionario: DefaultJob
Runtime = ; GC = 
There are not any results runs

BenchmarkExecutorFinal.cargarHashTable: DefaultJob
Runtime = ; GC = 
There are not any results runs

BenchmarkExecutorFinal.findItemDiccionario: DefaultJob
Runtime = .NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT; GC = Concurrent Workstation
Mean = 2.643 μs, StdErr = 0.046 μs (1.75%), N = 80, StdDev = 0.413 μs
Min = 1.600 μs, Q1 = 2.400 μs, Median = 2.600 μs, Q3 = 2.900 μs, Max = 3.700 μs
IQR = 0.500 μs, LowerFence = 1.650 μs, UpperFence = 3.650 μs
ConfidenceInterval = [2.485 μs; 2.800 μs] (CI 99.9%), Margin = 0.158 μs (5.98% of Mean)
Skewness = 0.22, Kurtosis = 2.79, MValue = 2.38
-------------------- Histogram --------------------
[1.474 μs ; 1.726 μs) | @
[1.726 μs ; 1.824 μs) | 
[1.824 μs ; 2.074 μs) | @@@@
[2.074 μs ; 2.374 μs) | @@@@@@@@@@@@@
[2.374 μs ; 2.626 μs) | @@@@@@@@@@@@@@@@@@@@@@@@@@
[2.626 μs ; 2.926 μs) | @@@@@@@@@@@@@@@@@
[2.926 μs ; 3.226 μs) | @@@@@@@@@@@@@
[3.226 μs ; 3.324 μs) | 
[3.324 μs ; 3.576 μs) | @@@@@
[3.576 μs ; 3.826 μs) | @
---------------------------------------------------

BenchmarkExecutorFinal.findItemHash: DefaultJob
Runtime = .NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT; GC = Concurrent Workstation
Mean = 62.334 μs, StdErr = 1.629 μs (2.61%), N = 97, StdDev = 16.048 μs
Min = 43.100 μs, Q1 = 50.500 μs, Median = 56.200 μs, Q3 = 71.700 μs, Max = 110.600 μs
IQR = 21.200 μs, LowerFence = 18.700 μs, UpperFence = 103.500 μs
ConfidenceInterval = [56.803 μs; 67.865 μs] (CI 99.9%), Margin = 5.531 μs (8.87% of Mean)
Skewness = 1.1, Kurtosis = 2.94, MValue = 2.68
-------------------- Histogram --------------------
[ 38.516 μs ;  48.516 μs) | @@@@@@@@@
[ 48.516 μs ;  57.684 μs) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[ 57.684 μs ;  66.934 μs) | @@@@@@@@@@
[ 66.934 μs ;  70.466 μs) | @
[ 70.466 μs ;  79.634 μs) | @@@@@@@
[ 79.634 μs ;  84.166 μs) | @@
[ 84.166 μs ;  93.334 μs) | @@@@@@@@@@@@@
[ 93.334 μs ; 102.484 μs) | @@@
[102.484 μs ; 106.016 μs) | 
[106.016 μs ; 115.184 μs) | @
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.12.1, OS=Windows 10.0.18363.1316 (1909/November2018Update/19H2)
AMD Ryzen 5 2600, 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=5.0.101
  [Host]     : .NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT  [AttachedDebugger]
  DefaultJob : .NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT


|              Method |      Mean |     Error |     StdDev |    Median | Rank | Gen 0 | Gen 1 | Gen 2 | Allocated |
|-------------------- |----------:|----------:|-----------:|----------:|-----:|------:|------:|------:|----------:|
|   cargarDiccionario |        NA |        NA |         NA |        NA |    ? |     - |     - |     - |         - |
|     cargarHashTable |        NA |        NA |         NA |        NA |    ? |     - |     - |     - |         - |
| findItemDiccionario |  2.643 μs | 0.1579 μs |  0.4133 μs |  2.600 μs |    1 |     - |     - |     - |         - |
|        findItemHash | 62.334 μs | 5.5314 μs | 16.0477 μs | 56.200 μs |    2 |     - |     - |     - |     416 B |

Benchmarks with issues:
  BenchmarkExecutorFinal.cargarDiccionario: DefaultJob
  BenchmarkExecutorFinal.cargarHashTable: DefaultJob

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger
MinIterationTime
  BenchmarkExecutorFinal.findItemDiccionario: Default -> The minimum observed iteration time is 1.6000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  BenchmarkExecutorFinal.findItemHash: Default        -> The minimum observed iteration time is 43.1000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.

// * Hints *
Outliers
  BenchmarkExecutorFinal.findItemDiccionario: Default -> 20 outliers were removed (9.80 μs..33.00 μs)
  BenchmarkExecutorFinal.findItemHash: Default        -> 3 outliers were removed (115.30 μs..119.20 μs)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Median    : Value separating the higher half of all measurements (50th percentile)
  Rank      : Relative position of current benchmark mean among all benchmarks (Arabic style)
  Gen 0     : GC Generation 0 collects per 1000 operations
  Gen 1     : GC Generation 1 collects per 1000 operations
  Gen 2     : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 μs      : 1 Microsecond (0.000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:18:57 (1137.49 sec), executed benchmarks: 4

Global total time: 00:19:05 (1145.69 sec), executed benchmarks: 4
// * Artifacts cleanup *
